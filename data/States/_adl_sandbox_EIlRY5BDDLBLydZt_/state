[{"children":{"N321ecf6d":{"extends":"box2.vwf","properties":{"DisplayName":"box7","___assetServerOriginalID":"N83e3ec00","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":3.45,"castShadows":false,"height":1.13,"materialDef":{"alpha":0,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":0,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.577350269189626,"g":0.577350269189626,"r":0.577350269189626},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"owner":"ADLteam","renderDepth":7,"transform":[1,0,9.999999974752427e-7,0,0,1,0,0,0,0,1,0,1,0,-0.2499990016222,1],"type":"Primitive","width":2.18},"random":{"c":1,"s0":0.198099663946778,"s1":0.0275812551844865,"s2":0.352169041289017},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N321ecf6d"},"N4d9c1278":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___assetServerOriginalID":"N958e2662","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"/sas/assets/7e6084c4"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"ADLteam","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"/sas/assets/c1064312","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N4d9c1278"},"Nfbe2435f":{"extends":"http://vwf.example.com/node3.vwf","properties":{"DisplayName":"enginePos","___assetServerOriginalID":"N8cf5a8e2","glyphURL":"../vwf/view/editorview/images/icons/sphere.png","owner":"ADLteam","transform":[1,0,0,0,0,1,0,0,-9.999999974752427e-7,0,1,0,3,0,-0.75,1],"transformAPI":{"COORDINATES":{"GLOBAL":"global","LOCAL":"local","PARENT":"parent"}},"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.03804640844464302,-0.0011256071738898754,0.9992753267288208,0,-11.907343864440918,-42.69558334350586,19.768699645996094,1]},"random":{"c":1,"s0":0.022454,"s1":0.002702,"s2":0.55584},"sequence":0,"name":"Nfbe2435f"},"Nfc9f3f62":{"events":{"pointerClick":{"body":"\n \n \n \n \n \n \n                                            this.parent.launchMissile()       ","parameters":["                                                  eventData","                                                  nodeData                                                  "]}},"extends":"box2.vwf","properties":{"DisplayName":"MissileLauncher","___assetServerOriginalID":"N8c4837dd","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"height":1.61,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"ADLteam","transform":[0.08618500083684921,-0.022557999938726425,0.9960219860076904,0,0.0010019999463111162,-0.9997419714927673,-0.02273000031709671,0,0.9962769746780396,0.002956999931484461,-0.08614099770784378,0,1,0,1.5,1],"type":"Primitive","visible":false,"width":1.36},"random":{"c":1,"s0":0.778299,"s1":0.286493,"s2":0.191579},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"Nfc9f3f62"}},"extends":"box2.vwf","methods":{"FACMovementDirection":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                // set equal to \"\" after adding calculations:\n                var movement = \"closing\";\n                // Perform calculations to determine approaching or moving away states:\n                //     movement = \"closing\" if distance to target is getting smaller\n                //     movement = \"none\" if distance to target hasn't changed\n                //     movement = \"increasing\" if distance to target is getting larger\n                switch (movement)\n                {\n                    case \"closing\":\n                        this.currentState = this.states[\"approaching\"];\n                        return \"approaching\";\n                    case \"none\":\n                        this.currentState = this.states[\"idle\"];\n                        return \"idle\";\n                    case \"increasing\":\n                        this.currentState = this.states[\"moving_away\"];\n                        return \"moving_away\";\n                }    \n\n\n\n\n\n\n","parameters":[]},"_keyDown":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this.currentState === null)\n                {\n                    console.log(\"Set initial state\");\n                    this.currentState = this.states[\"approaching\"];\n                }\n                if (this._keysDown.indexOf(e.key.char) == -1)\n                {\n                    this._keysDown.push(e.key.char);\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"_keyUp":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this._keysDown.indexOf(e.key.char) !== -1)\n                {\n                    this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n                }\n                if (e.key.char == \" \")\n                {\n                    if (this.rockets > 0)\n                    {\n                        this.activateState(\"fire_rocket\");\n                        console.log(\"rockets: \" + this.rockets);\n                    }\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"activateState":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                //console.log(\"activateState\");\n                var state = this.states[statename];\n\n                if (this.currentState.transitions.indexOf(statename) == -1)\n                {\n                    console.log(\"invalid transition!\");\n                    return;\n                }\n\n                if (state.transitionFunction)\n                    this[state.transitionFunction](this.currentState);\n\n                this.currentState = state;\n\n                for (var i in state.properties)\n                {\n                    console.log(state.properties[i]);\n                    this[i] = state.properties[i];\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"approachingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingTransition\");\n                this.approachingUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"approachingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingUpdate\");\n                this.currentState = this.states[\"approaching\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"collidingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingTransition\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":[]},"collidingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingUpdate\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"consumeFuel":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (this.fuel <= 0.0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                }\n                else\n                {\n                    this.fuel = this.fuel - this.fuelConsumptionRate;\n                    console.log(\"fuel: \" + this.fuel);\n                }    \n\n\n\n\n\n\n","parameters":[]},"defeatedTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedTransition\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":[]},"defeatedUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedUpdate\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"fire_rocketTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketTransition\");\n                this.fire_rocketUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"fire_rocketUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketUpdate\");\n                this.launchMissile();\n                this.playMissileLaunch();\n                this.rockets = this.rockets - 1;\n                if (this.rockets > 0)\n                {\n                    this.currentState = this.states[\"fire_rocket\"];\n                    console.log(\"rocketUpdate state fire \");\n                }\n                else\n                {\n                    this.currentState = this.states[\"idle\"];\n                    console.log(\"rocketUpdate state idle\");\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"hit":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n             var pos = args[0];\n                var force = args[1];\n                if (typeof force == 'number')\n                    this.health -= force;\n                else\n                    this.health -= 101;\n\n                if (this.health < 0)\n                {\n                    var def = this.explosionDef;\n                    var pos = this.transformAPI.getWorldPosition();\n                    def.properties.transform[12] = pos[0];\n                    def.properties.transform[13] = pos[1];\n                    def.properties.transform[14] = pos[2];\n                    def.properties.fuse = 1;\n                    vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null);\n                    this.parent.children.delete(this);\n                } \n\n\n\n\n\n\n","parameters":["args"]},"idleTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleTransition\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":[]},"idleUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleUpdate\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"launchMissile":{"body":"\n\n\n\n\n\n\n\n\n         var def = this.missileDef;\n            var pos = this.children_by_name.MissileLauncher.worldTransform.slice();\n\n            pos[14] += 0;\n            def.properties.transform = pos;\n           // def.properties.___physics_velocity_linear = this.physicsAPI.getLinearVelocity();\n            def.properties.fired = true;\n            var now = performance.now();\n            // console.profile(\"launch\");\n            vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null, function()\n            {\n                console.log(performance.now() - now);\n            }); \n\n\n\n\n","parameters":[]},"moving_awayTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayTransition\");\n                this.moving_awayUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"moving_awayUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayUpdate\");\n                this.currentState = this.states[\"moving_away\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"out_of_gasTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasTransition\");\n                //this.currentState = this.states[\"out_of_gas\"];\n                this.out_of_gasUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"out_of_gasUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasUpdate\");\n                console.log(statename);\n                if (this.fuel <= 0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                    console.log(\"out_of_gasUpdate now out_of_gas state\");\n                }\n                else if (this.hullStrength <= 0)\n                {\n                    this.currentState = this.states[\"defeated\"];\n                    console.log(\"out_of_gasUpdate now defaeted state\");\n                }   \n\n\n\n\n\n\n","parameters":["statename"]},"playBulletHittingMetal":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingMetal\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletHittingWater":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingWater\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletWhizzingBy":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletWhizzingBy\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playExplosion":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playExplosion\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/8d358349\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/d714ebe1\", false, 100);\n                // #3:\n                this.audioAPI.playSound(\"/sas/assets/3c6b353e\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playHelicopter":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               //console.log(\"playHelicopter\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/af90534a\", false, 100);\n                //#2:\n                this.audioAPI.playSound(\"/sas/assets/dc81768a\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMissileLaunch":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMissileLaunch\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/744acf2e\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/4334801b\", false, 100);\n                // #3:\n                //this.audioAPI.playSound(\"/sas/assets/10b027bd\", false, 100);\n                // #4:\n                //this.audioAPI.playSound(\"/sas/assets/94d508e3\", false, 100);\n                // #5:\n                this.audioAPI.playSound(\"/sas/assets/263beb86\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorIdle":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorIdle\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorRunning":{"body":"\n\n\n\n\n\n\n       //console.log(\"playMotorRunning\");\n          // #1:\n          //this.audioAPI.playSound(\"/sas/assets/2cb9fef9\", false, 100);\n          // #2:\n          //this.audioAPI.playSound(\"/sas/assets/994ee0c8\", false, 100);\n          // #3:\n          var sound = vwf.callMethod(this.id, \"getSound\", [\"/sas/assets/c253157d\"]);\n\n          if (sound == null || !sound.isPlaying())\n          {\n              this.audioAPI.playSound(\"/sas/assets/c253157d\", true, 100);\n          } \n\n\n\n","parameters":[]},"playMotorSputtering":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorSputtering\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playWarning":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playWarning\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"ready":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                 // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n                this.Scene.unbind(\"keyDown\",this._kd);\n                this.Scene.unbind(\"keyUp\",this._ku);\n                var self = this;\n                this._kd = function(e,d){self._keyDown(e,d)};\n                this._ku = function(e,d){self._keyUp(e,d)};\n                this.Scene.bind(\"keyDown\",this._kd);\n                this.Scene.bind(\"keyUp\",this._ku);                                                     \n\n\n\n\n\n\n","parameters":[]},"tick":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               var waterDepth = 20;\n                var hullThick = 2.2;\n                var depthFloor = waterDepth + hullThick;\n                // The tick function is called 20 times every second.\n                // Write code here to animate over time\n                this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n                this.physicsAPI.wake();\n                var mass = this.physicsAPI.getMass();\n                var corners = [\n                    [this._length / 2, this.width / 2, 0],\n                    [this._length / 2, -this.width / 2, 0],\n                    [-this._length / 2, this.width / 2, 0],\n                    [-this._length / 2, -this.width / 2, 0],\n                ];\n\n                this.counter++;\n                var rocking = -mass / 5;\n                this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n                this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n                for (var i = 0; i < corners.length; i++)\n                {\n                    var corner = corners[i];\n                    var worldCorner = this.transformAPI.localToGlobal(corner);\n                    var depth = depthFloor - worldCorner[2];\n                    depth = Math.min(depth, 5);\n                    if (depth > 0)\n                    {\n\n                        this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n                        var vel = this.physicsAPI.getLinearVelocity();\n                        var torque = this.physicsAPI.getAngularVelocity();\n                        //    vel[0] *= .6;\n                        // vel[1] *= .6;\n                        vel[2] *= 1 - depth / 50;\n\n                        torque[0] *= 1 - depth / 100;\n                        torque[1] *= 1 - depth / 100;\n                        torque[2] *= 1 - depth / 100;\n                        this.physicsAPI.setAngularVelocity(torque);\n                        this.physicsAPI.setLinearVelocity(vel);\n                    }\n                    //  if (depth < 0)\n                    {\n\n                        this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n                        var vel = this.physicsAPI.getLinearVelocity();\n                        var torque = this.physicsAPI.getAngularVelocity();\n                    }\n\n                }\n\n                var depth = depthFloor - this.transformAPI.getPosition()[2]\n                depth = Math.min(depth, 5);\n                if (depth > 0)\n                {\n\n                    var vel = this.physicsAPI.getLinearVelocity();\n                    vel = this.transformAPI.globalToLocalRotation(vel);\n                    vel[0] *= 1.0 - depth / 100;\n                    vel[1] *= 1.0 - depth / 30;\n                    vel = this.transformAPI.localToGlobalRotation(vel);\n                    this.physicsAPI.setLinearVelocity(vel);\n\n                }\n\n                if (this._keysDown.indexOf(\"W\") !== -1)\n                {\n                    this.consumeFuel();\n                    if (this.currentState.name === this.states[\"out_of_gas\"].name)\n                    {\n                        console.log(\"(W) out of gas!\");\n                        this.activateState(\"out_of_gas\");\n                    }\n                    else\n                    {\n                        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n                        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n                        this.playMotorRunning();\n                        switch (this.FACMovementDirection())\n                        {\n                            case \"approaching\":\n                                this.activateState(\"approaching\");\n                                break;\n                            case \"idle\":\n                                this.activateState(\"idle\");\n                                break;\n                            case \"moving_away\":\n                                this.activateState(\"moving_away\");\n                                break;\n                        }\n                    }\n                }\n                if (this._keysDown.indexOf(\"S\") !== -1)\n                {\n                    this.consumeFuel();\n                    if (this.currentState.name === this.states[\"out_of_gas\"].name)\n                    {\n                        console.log(\"(S) out of gas!\");\n                        this.activateState(\"out_of_gas\");\n                    }\n                    else\n                    {\n                        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n                        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n                        this.playMotorRunning();\n                        switch (this.FACMovementDirection())\n                        {\n                            case \"approaching\":\n                                this.activateState(\"approaching\");\n                                break;\n                            case \"idle\":\n                                this.activateState(\"idle\");\n                                break;\n                            case \"moving_away\":\n                                this.activateState(\"moving_away\");\n                                break;\n                        }\n                    }\n                }\n                var vel = this.physicsAPI.getLinearVelocity();\n                vel = this.transformAPI.globalToLocalRotation(vel);\n                var speedTorqueFactor = (Math.abs(vel[0]) / 3);\n                if (this._keysDown.indexOf(\"A\") !== -1)\n                {\n\n                    this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n                    var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n                    this.physicsAPI.addTorque(force);\n                }\n                if (this._keysDown.indexOf(\"D\") !== -1)\n                {\n                    this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n                    var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n                    this.physicsAPI.addTorque(force);\n                }\n                if (this._keysDown.indexOf(\" \") !== -1)\n                {\n                    if (this.rockets > 0)\n                    {\n                        this.currentState = this.states[\"fire_rocket\"];\n                    }\n                    else\n                    {\n                        this.currentState = this.states[\"moving_away\"];\n                    }\n                }   \n\n\n\n\n\n\n","parameters":[]},"verifyCamera":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                  var cam = this.Scene.clientAPI.getCameraForClient(vwf.client());\n\n                if (!cam || cam.id != this.controllingCamera) return false;\n                return true;      \n\n\n\n\n\n\n","parameters":[]}},"properties":{"DisplayName":"FAC_SLAVE2","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[-0.0205620388669852,0.137373529226051,0.000692897715996474],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[-0.115731220145219,0.602527779520543,-0.000487978426872444],"___physics_mass":8051.2,"___physics_velocity_angular":[0.02765009179711342,-0.1445750892162323,0.00038580354885198176],"___physics_velocity_linear":[-0.01912243291735649,0.10449027270078659,-0.0032515337225049734],"_keysDown":[],"_length":7,"activeState":"active","bullets_50_cal":1000,"controllingCamera":"SandboxCamera-vwf-N373ec60b","counter":14602,"currentState":null,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"explosionDef":{"continues":"/sas/assets/d3402bc3","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"fuel":100,"fuelConsumptionRate":0.01,"health":100,"height":1.2,"hostile":true,"hullStrength":100,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":1,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"missileDef":{"continues":"/sas/assets/d62299d5","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"owner":"ADLteam","physicsAPI":{},"rangeToTarget":1000,"rockets":5,"sourceAssetId":"1ad6adad","states":{"approaching":{"name":"approaching","properties":{},"transitionFunction":"approachingTransition","transitions":["approaching","moving_away","idle","out_of_gas","fire_rocket","colliding","defeated"],"updateFunction":"approachingUpdate"},"colliding":{"name":"colliding","properties":{},"transitionFunction":"collidingTransition","transitions":["colliding","defeated"],"updateFunction":"collidingUpdate"},"defeated":{"name":"defeated","properties":{},"transitionFunction":"defeatedTransition","transitions":["defeated"],"updateFunction":"defeatedUpdate"},"fire_rocket":{"name":"fire_rocket","properties":{},"transitionFunction":"fire_rocketTransition","transitions":["approaching","fire_rocket","moving_away","idle","colliding","defeated"],"updateFunction":"fire_rocketUpdate"},"idle":{"name":"idle","properties":{},"transitionFunction":"idleTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"idleUpdate"},"moving_away":{"name":"moving_away","properties":{},"transitionFunction":"moving_awayTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"moving_awayUpdate"},"out_of_gas":{"name":"out_of_gas","properties":{},"transitionFunction":"out_of_gasTransition","transitions":["out_of_gas","colliding","defeated"],"updateFunction":"out_of_gasUpdate"}},"transform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265893699601293,0.9992753267288208,0,-12.5,-39.75,20.5,1],"type":"Primitive","visible":false,"warningsReceived":0,"width":2.5,"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265893699601293,0.9992753267288208,0,-12.5,-39.75,20.5,1]},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N1c9bdb0e"},{"children":{"N20569f3b":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                   this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);             \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                  // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                            \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem4","___assetServerOriginalID":"Nb5bcb9f7","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-218,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,23.2088038758212,11.911276477453,1.11022302462516e-16,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"N20569f3b"},"N616c830d":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                  this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);            \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                 // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                           \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem3","___assetServerOriginalID":"N6ea9f140","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-236,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,26.0339719083774,14.1021328343483,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"N616c830d"},"N6ab59711":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                     this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);               \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                    // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                              \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem7","___assetServerOriginalID":"Nec7b6ac1","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-222,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,21.6046572051136,10.3720775145378,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"N6ab59711"},"N963ff4e0":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                      this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);                \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                     // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                               \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem9","___assetServerOriginalID":"Na421bf57","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-216,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,25.0058793968185,12.9082975405384,-1.11022302462516e-16,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"N963ff4e0"},"Na1956f64":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                        this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);                  \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                       // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                                 \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem11","___assetServerOriginalID":"N2e89a982","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-238,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,21.0707831804383,9.8161034612111,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Na1956f64"},"Naca9902d":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                   this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);             \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                  // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                            \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem4","___assetServerOriginalID":"Ne5fd1e14","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-220,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,23.5433481911566,12.0703988308386,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Naca9902d"},"Nad7b44d4":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                    this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);              \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                   // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                             \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem6","___assetServerOriginalID":"N1675d244","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-228,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,27.03855668276,14.7542637144711,1.11022302462516e-16,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Nad7b44d4"},"Naddfe610":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                 this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);           \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                          \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem2","___assetServerOriginalID":"N38b49f97","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-224,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,29.7684660265342,17.1156595024539,1.11022302462516e-16,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Naddfe610"},"Nbad2c52b":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);          \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                               // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                         \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem9","___assetServerOriginalID":"Nf765253e","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-226,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,28.7537918681036,16.1288847057294,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Nbad2c52b"},"Ne0c5729":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                       this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);                 \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                      // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                                \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem10","___assetServerOriginalID":"Nd132a72c","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-230,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,25.6072900627637,14.0532048055558,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Ne0c5729"},"Nef3715d2":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                     this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);               \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                    // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                              \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem7","___assetServerOriginalID":"N95a1561c","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-232,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,21.8927990393713,10.6259235944861,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Nef3715d2"},"Nf863f097":{"extends":"SandboxParticleSystem.vwf","methods":{"start":{"body":"\n\n\n\n\n\n\n                         this.transformAPI.setPosition(pos);\n          this.visible = true;\n          this.counter = 10;\n          var sound = Math.floor((Math.random() - .01) * 3);\n          if(sound > 0 && sound < 2)\n          this.audioAPI.playSound(this.soundFiles[sound], false, 30);                   \n\n\n\n","parameters":["pos"]},"tick":{"body":"\n\n\n\n\n\n\n                                                                        // The tick function is called 20 times every second.\n          // Write code here to animate over time\n          this.visible = true;\n          if(this.counter < 0)\n          this.visible = false;\n          this.counter--;                                                                  \n\n\n\n","parameters":[]}},"properties":{"DisplayName":"ParticleSystem12","___assetServerOriginalID":"N47f111ed","additive":false,"alphaTest":0.5,"colorRange":[0,0,0,0],"counter":-234,"depthTest":false,"emitterPosition":[0,0,3],"emitterSize":[0.2,0.2,1],"emitterType":"box","endColor":[0.698039215686274,0.976470588235294,1,0.5],"endSize":1,"image":"../vwfDataManager.svc/texture?UID=water.png","mamSpin":20,"maxAcceleration":[0,0,-9.82],"maxLifeTime":1,"maxOrientation":13.2,"maxRate":0,"maxVelocity":[0,0,0],"minAcceleration":[0,0,-9.82],"minLifeTime":1,"minOrientation":-19.5,"minSpin":1.1,"minVelocity":[0,0,0],"owner":"Anonymous_zgviOjtXorD5eSi9AAAA","particleCount":50,"sizeRange":0,"solver":"AnalyticShader","soundFiles":["/sas/assets/2cb9fef9","/sas/assets/994ee0c8","/sas/assets/68b679a8"],"startColor":[1,1,1,1],"startSize":0.1,"textureTiles":4,"transform":[0.367231965065002,0,0,0,0,0.367231965065002,0,0,0,0,0.367231965065002,0,25.8694349359583,13.7481619497759,0,1],"type":"ParticleSystem","velocityMode":"cartesian","visible":false},"random":{"c":414635,"s0":0.318485354771838,"s1":0.128272331960034,"s2":0.216222008166369},"sequence":0,"name":"Nf863f097"}},"extends":"plane2.vwf","methods":{"hit":{"body":"\n\n\n\n\n\n\n        var pos = args[0];\n          if(!pos) return;\n          pos = this.transformAPI.globalToLocal(pos);\n          //this.children[this.splashCount].transformAPI.setPosition(pos);\n          this.children[this.splashCount].start(pos);\n\n          this.splashCount++;\n          console.log(this.children.length);\n          if (this.splashCount > this.children.length - 1)\n          {\n\n              this.splashCount = 0;\n          }  \n\n\n\n","parameters":["args"]},"splash":{"body":"\n\n\n\n\n\n\n\n\n\n\n","parameters":["pos"]}},"properties":{"":null,"DisplayName":"Ocean","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":10000,"lsegs":30,"materialDef":{"alpha":0.993506493506494,"ambient":{"b":0.658823529411765,"g":0.541176470588235,"r":0.490196078431373},"blendMode":0,"color":{"a":0.993506493506494,"b":0.658823529411765,"g":0.541176470588235,"r":0.490196078431373},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[{"alpha":0.15,"mapInput":0,"mapTo":4,"offsetx":0,"offsety":0,"rot":0,"scalex":100,"scaley":100,"src":"../vwfDataManager.svc/texture?UID=waternormal.jpg"}],"metal":false,"reflect":1,"shadeless":false,"shading":true,"shadow":true,"shininess":1,"side":0,"specularColor":{"b":30.5773502691896,"g":30.5773502691896,"r":30.5773502691896},"specularLevel":10,"type":"phong","vertexColors":false,"wireframe":false},"owner":"ADLteam","renderDepth":0,"sourceAssetId":"0c42853d","splashCount":2,"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,20,1],"type":"Primitive","width":10000,"wsegs":30},"random":{"c":1,"s0":0.703975566895679,"s1":0.197294719750062,"s2":0.396665057167411},"sequence":0,"source":"vwf/model/threejs/plane.js","type":"subDriver/threejs","name":"N6f03c54a"},{"children":{"N1942ea85":{"events":{"pointerClick":{"body":"\n \n \n \n \n \n \n                                            this.parent.launchMissile()       ","parameters":["                                                  eventData","                                                  nodeData                                                  "]}},"extends":"box2.vwf","properties":{"DisplayName":"MissileLauncher","___assetServerOriginalID":"N8c4837dd","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"height":1.61,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"ADLteam","transform":[0.08618500083684921,-0.022557999938726425,0.9960219860076904,0,0.0010019999463111162,-0.9997419714927673,-0.02273000031709671,0,0.9962769746780396,0.002956999931484461,-0.08614099770784378,0,1,0,1.5,1],"type":"Primitive","visible":false,"width":1.36,"worldTransform":[-0.04382757470011711,-0.09001200646162033,0.9949740767478943,0,-0.980117678642273,-0.18904437124729156,-0.06027643010020256,0,0.19351975619792938,-0.9778327345848083,-0.07993784546852112,0,-6.6190290451049805,1.516168475151062,22.25496482849121,1]},"random":{"c":1,"s0":0.778299,"s1":0.286493,"s2":0.191579},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N1942ea85"},"N2a18e6d5":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___assetServerOriginalID":"N958e2662","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"/sas/assets/7e6084c4"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"ADLteam","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"/sas/assets/c1064312","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N2a18e6d5"},"N638a9776":{"extends":"http://vwf.example.com/node3.vwf","properties":{"DisplayName":"enginePos","___assetServerOriginalID":"N8cf5a8e2","glyphURL":"../vwf/view/editorview/images/icons/sphere.png","owner":"ADLteam","transform":[1,0,0,0,0,1,0,0,-9.999999974752427e-7,0,1,0,3,0,-0.75,1],"transformAPI":{"COORDINATES":{"GLOBAL":"global","LOCAL":"local","PARENT":"parent"}},"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142940461636,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.03804640844464302,-0.0011256062425673008,0.9992753267288208,0,-6.157343864440918,-0.44558197259902954,20.018699645996094,1]},"random":{"c":1,"s0":0.022454,"s1":0.002702,"s2":0.55584},"sequence":0,"name":"N638a9776"},"N7416f1f":{"extends":"box2.vwf","properties":{"DisplayName":"box7","___assetServerOriginalID":"N83e3ec00","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":3.45,"castShadows":false,"height":1.13,"materialDef":{"alpha":0,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":0,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.577350269189626,"g":0.577350269189626,"r":0.577350269189626},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"owner":"ADLteam","renderDepth":7,"transform":[1,0,9.999999974752427e-7,0,0,1,0,0,0,0,1,0,1,0,-0.2499990016222,1],"type":"Primitive","width":2.18},"random":{"c":1,"s0":0.198099663946778,"s1":0.0275812551844865,"s2":0.352169041289017},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N7416f1f"}},"extends":"box2.vwf","methods":{"FACMovementDirection":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                // set equal to \"\" after adding calculations:\n                var movement = \"closing\";\n                // Perform calculations to determine approaching or moving away states:\n                //     movement = \"closing\" if distance to target is getting smaller\n                //     movement = \"none\" if distance to target hasn't changed\n                //     movement = \"increasing\" if distance to target is getting larger\n                switch (movement)\n                {\n                    case \"closing\":\n                        this.currentState = this.states[\"approaching\"];\n                        return \"approaching\";\n                    case \"none\":\n                        this.currentState = this.states[\"idle\"];\n                        return \"idle\";\n                    case \"increasing\":\n                        this.currentState = this.states[\"moving_away\"];\n                        return \"moving_away\";\n                }    \n\n\n\n\n\n\n","parameters":[]},"_keyDown":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this.currentState === null)\n                {\n                    console.log(\"Set initial state\");\n                    this.currentState = this.states[\"approaching\"];\n                }\n                if (this._keysDown.indexOf(e.key.char) == -1)\n                {\n                    this._keysDown.push(e.key.char);\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"_keyUp":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this._keysDown.indexOf(e.key.char) !== -1)\n                {\n                    this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n                }\n                if (e.key.char == \" \")\n                {\n                    if (this.rockets > 0)\n                    {\n                        this.activateState(\"fire_rocket\");\n                        console.log(\"rockets: \" + this.rockets);\n                    }\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"activateState":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                //console.log(\"activateState\");\n                var state = this.states[statename];\n\n                if (this.currentState.transitions.indexOf(statename) == -1)\n                {\n                    console.log(\"invalid transition!\");\n                    return;\n                }\n\n                if (state.transitionFunction)\n                    this[state.transitionFunction](this.currentState);\n\n                this.currentState = state;\n\n                for (var i in state.properties)\n                {\n                    console.log(state.properties[i]);\n                    this[i] = state.properties[i];\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"approachingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingTransition\");\n                this.approachingUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"approachingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingUpdate\");\n                this.currentState = this.states[\"approaching\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"collidingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingTransition\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":[]},"collidingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingUpdate\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"consumeFuel":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (this.fuel <= 0.0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                }\n                else\n                {\n                    this.fuel = this.fuel - this.fuelConsumptionRate;\n                    console.log(\"fuel: \" + this.fuel);\n                }    \n\n\n\n\n\n\n","parameters":[]},"defeatedTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedTransition\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":[]},"defeatedUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedUpdate\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"fire_rocketTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketTransition\");\n                this.fire_rocketUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"fire_rocketUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketUpdate\");\n                this.launchMissile();\n                this.playMissileLaunch();\n                this.rockets = this.rockets - 1;\n                if (this.rockets > 0)\n                {\n                    this.currentState = this.states[\"fire_rocket\"];\n                    console.log(\"rocketUpdate state fire \");\n                }\n                else\n                {\n                    this.currentState = this.states[\"idle\"];\n                    console.log(\"rocketUpdate state idle\");\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"hit":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n             var pos = args[0];\n                var force = args[1];\n                if (typeof force == 'number')\n                    this.health -= force;\n                else\n                    this.health -= 101;\n\n                if (this.health < 0)\n                {\n                    var def = this.explosionDef;\n                    var pos = this.transformAPI.getWorldPosition();\n                    def.properties.transform[12] = pos[0];\n                    def.properties.transform[13] = pos[1];\n                    def.properties.transform[14] = pos[2];\n                    def.properties.fuse = 1;\n                    vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null);\n                    this.parent.children.delete(this);\n                } \n\n\n\n\n\n\n","parameters":["args"]},"idleTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleTransition\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":[]},"idleUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleUpdate\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"launchMissile":{"body":"\n\n\n\n\n\n\n\n\n         var def = this.missileDef;\n            var pos = this.children_by_name.MissileLauncher.worldTransform.slice();\n\n            pos[14] += 0;\n            def.properties.transform = pos;\n           // def.properties.___physics_velocity_linear = this.physicsAPI.getLinearVelocity();\n            def.properties.fired = true;\n            var now = performance.now();\n            // console.profile(\"launch\");\n            vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null, function()\n            {\n                console.log(performance.now() - now);\n            }); \n\n\n\n\n","parameters":[]},"moving_awayTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayTransition\");\n                this.moving_awayUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"moving_awayUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayUpdate\");\n                this.currentState = this.states[\"moving_away\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"out_of_gasTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasTransition\");\n                //this.currentState = this.states[\"out_of_gas\"];\n                this.out_of_gasUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"out_of_gasUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasUpdate\");\n                console.log(statename);\n                if (this.fuel <= 0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                    console.log(\"out_of_gasUpdate now out_of_gas state\");\n                }\n                else if (this.hullStrength <= 0)\n                {\n                    this.currentState = this.states[\"defeated\"];\n                    console.log(\"out_of_gasUpdate now defaeted state\");\n                }   \n\n\n\n\n\n\n","parameters":["statename"]},"playBulletHittingMetal":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingMetal\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletHittingWater":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingWater\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletWhizzingBy":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletWhizzingBy\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playExplosion":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playExplosion\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/8d358349\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/d714ebe1\", false, 100);\n                // #3:\n                this.audioAPI.playSound(\"/sas/assets/3c6b353e\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playHelicopter":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               //console.log(\"playHelicopter\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/af90534a\", false, 100);\n                //#2:\n                this.audioAPI.playSound(\"/sas/assets/dc81768a\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMissileLaunch":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMissileLaunch\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/744acf2e\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/4334801b\", false, 100);\n                // #3:\n                //this.audioAPI.playSound(\"/sas/assets/10b027bd\", false, 100);\n                // #4:\n                //this.audioAPI.playSound(\"/sas/assets/94d508e3\", false, 100);\n                // #5:\n                this.audioAPI.playSound(\"/sas/assets/263beb86\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorIdle":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorIdle\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorRunning":{"body":"\n\n\n\n\n\n\n       //console.log(\"playMotorRunning\");\n          // #1:\n          //this.audioAPI.playSound(\"/sas/assets/2cb9fef9\", false, 100);\n          // #2:\n          //this.audioAPI.playSound(\"/sas/assets/994ee0c8\", false, 100);\n          // #3:\n          var sound = vwf.callMethod(this.id, \"getSound\", [\"/sas/assets/c253157d\"]);\n\n          if (sound == null || !sound.isPlaying())\n          {\n              this.audioAPI.playSound(\"/sas/assets/c253157d\", true, 100);\n          } \n\n\n\n","parameters":[]},"playMotorSputtering":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorSputtering\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playWarning":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playWarning\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"ready":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                 // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n                this.Scene.unbind(\"keyDown\",this._kd);\n                this.Scene.unbind(\"keyUp\",this._ku);\n                var self = this;\n                this._kd = function(e,d){self._keyDown(e,d)};\n                this._ku = function(e,d){self._keyUp(e,d)};\n                this.Scene.bind(\"keyDown\",this._kd);\n                this.Scene.bind(\"keyUp\",this._ku);                                                     \n\n\n\n\n\n\n","parameters":[]},"tick":{"body":"\n var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    this.broadcast(\"facFollowBehavior\", this._keysDown, 50);\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        this.consumeFuel();\n        if (this.currentState.name === this.states[\"out_of_gas\"].name)\n        {\n            console.log(\"(W) out of gas!\");\n            this.activateState(\"out_of_gas\");\n        }\n        else\n        {\n            var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n            this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n            this.playMotorRunning();\n            switch (this.FACMovementDirection())\n            {\n                case \"approaching\":\n                    this.activateState(\"approaching\");\n                    break;\n                case \"idle\":\n                    this.activateState(\"idle\");\n                    break;\n                case \"moving_away\":\n                    this.activateState(\"moving_away\");\n                    break;\n            }\n        }\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        this.consumeFuel();\n        if (this.currentState.name === this.states[\"out_of_gas\"].name)\n        {\n            console.log(\"(S) out of gas!\");\n            this.activateState(\"out_of_gas\");\n        }\n        else\n        {\n            var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n            this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n            this.playMotorRunning();\n            switch (this.FACMovementDirection())\n            {\n                case \"approaching\":\n                    this.activateState(\"approaching\");\n                    break;\n                case \"idle\":\n                    this.activateState(\"idle\");\n                    break;\n                case \"moving_away\":\n                    this.activateState(\"moving_away\");\n                    break;\n            }\n        }\n    }\n    var vel = this.physicsAPI.getLinearVelocity();\n    vel = this.transformAPI.globalToLocalRotation(vel);\n    var speedTorqueFactor = (Math.abs(vel[0]) / 3);\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\" \") !== -1)\n    {\n        if (this.rockets > 0)\n        {\n            this.currentState = this.states[\"fire_rocket\"];\n        }\n        else\n        {\n            this.currentState = this.states[\"moving_away\"];\n        }\n    } \n","parameters":[]},"verifyCamera":{"body":"\n\n\n\n\n     return true;\n\n        var cam = this.Scene.clientAPI.getCameraForClient(vwf.client());\n\n        if (!cam || cam.id != this.controllingCamera) return false;\n        return true; \n\n\n","parameters":[]}},"properties":{"DisplayName":"FAC_MASTER","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[-0.0205620388669852,0.137373529226051,0.000692897715996474],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[-0.115731220145219,0.602527779520543,-0.000487978426872444],"___physics_mass":8051.2,"___physics_velocity_angular":[0.02765009179711342,-0.1445750892162323,0.00038580354885198176],"___physics_velocity_linear":[-0.01912243291735649,0.10449027270078659,-0.0032515337225049734],"_keysDown":[],"_length":7,"activeState":"active","bullets_50_cal":1000,"controllingCamera":"SandboxCamera-vwf-N373ec60b","counter":14602,"currentState":null,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"explosionDef":{"continues":"/sas/assets/d3402bc3","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"fuel":100,"fuelConsumptionRate":0.01,"health":100,"height":1.2,"hostile":true,"hullStrength":100,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":1,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"missileDef":{"continues":"/sas/assets/d62299d5","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"owner":"ADLteam","physicsAPI":{},"rangeToTarget":1000,"rockets":5,"sourceAssetId":"1ad6adad","states":{"approaching":{"name":"approaching","properties":{},"transitionFunction":"approachingTransition","transitions":["approaching","moving_away","idle","out_of_gas","fire_rocket","colliding","defeated"],"updateFunction":"approachingUpdate"},"colliding":{"name":"colliding","properties":{},"transitionFunction":"collidingTransition","transitions":["colliding","defeated"],"updateFunction":"collidingUpdate"},"defeated":{"name":"defeated","properties":{},"transitionFunction":"defeatedTransition","transitions":["defeated"],"updateFunction":"defeatedUpdate"},"fire_rocket":{"name":"fire_rocket","properties":{},"transitionFunction":"fire_rocketTransition","transitions":["approaching","fire_rocket","moving_away","idle","colliding","defeated"],"updateFunction":"fire_rocketUpdate"},"idle":{"name":"idle","properties":{},"transitionFunction":"idleTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"idleUpdate"},"moving_away":{"name":"moving_away","properties":{},"transitionFunction":"moving_awayTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"moving_awayUpdate"},"out_of_gas":{"name":"out_of_gas","properties":{},"transitionFunction":"out_of_gasTransition","transitions":["out_of_gas","colliding","defeated"],"updateFunction":"out_of_gasUpdate"}},"transform":[0.18804042041301727,-0.9821426272392273,0.006052142940461636,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265884386375546,0.9992753267288208,0,-6.75,2.5000009536743164,20.75,1],"type":"Primitive","visible":false,"warningsReceived":0,"width":2.5,"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142940461636,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265884386375546,0.9992753267288208,0,-6.75,2.5000009536743164,20.75,1]},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N71895091"},{"children":{"N3c119186":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___assetServerOriginalID":"N958e2662","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"/sas/assets/7e6084c4"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"ADLteam","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"/sas/assets/c1064312","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N3c119186"},"N85ea9e9c":{"extends":"http://vwf.example.com/node3.vwf","properties":{"DisplayName":"enginePos","___assetServerOriginalID":"N8cf5a8e2","glyphURL":"../vwf/view/editorview/images/icons/sphere.png","owner":"ADLteam","transform":[1,0,0,0,0,1,0,0,-9.999999974752427e-7,0,1,0,3,0,-0.75,1],"transformAPI":{"COORDINATES":{"GLOBAL":"global","LOCAL":"local","PARENT":"parent"}},"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.03804640844464302,-0.0011256071738898754,0.9992753267288208,0,11.592656135559082,-19.69558334350586,19.768699645996094,1]},"random":{"c":1,"s0":0.022454,"s1":0.002702,"s2":0.55584},"sequence":0,"name":"N85ea9e9c"},"Ndeef6692":{"events":{"pointerClick":{"body":"\n \n \n \n \n \n \n                                            this.parent.launchMissile()       ","parameters":["                                                  eventData","                                                  nodeData                                                  "]}},"extends":"box2.vwf","properties":{"DisplayName":"MissileLauncher","___assetServerOriginalID":"N8c4837dd","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"height":1.61,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"ADLteam","transform":[0.08618500083684921,-0.022557999938726425,0.9960219860076904,0,0.0010019999463111162,-0.9997419714927673,-0.02273000031709671,0,0.9962769746780396,0.002956999931484461,-0.08614099770784378,0,1,0,1.5,1],"type":"Primitive","visible":false,"width":1.36},"random":{"c":1,"s0":0.778299,"s1":0.286493,"s2":0.191579},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"Ndeef6692"},"Nf3dfef74":{"extends":"box2.vwf","properties":{"DisplayName":"box7","___assetServerOriginalID":"N83e3ec00","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":3.45,"castShadows":false,"height":1.13,"materialDef":{"alpha":0,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":0,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.577350269189626,"g":0.577350269189626,"r":0.577350269189626},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"owner":"ADLteam","renderDepth":7,"transform":[1,0,9.999999974752427e-7,0,0,1,0,0,0,0,1,0,1,0,-0.2499990016222,1],"type":"Primitive","width":2.18},"random":{"c":1,"s0":0.198099663946778,"s1":0.0275812551844865,"s2":0.352169041289017},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"Nf3dfef74"}},"extends":"box2.vwf","methods":{"FACMovementDirection":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                // set equal to \"\" after adding calculations:\n                var movement = \"closing\";\n                // Perform calculations to determine approaching or moving away states:\n                //     movement = \"closing\" if distance to target is getting smaller\n                //     movement = \"none\" if distance to target hasn't changed\n                //     movement = \"increasing\" if distance to target is getting larger\n                switch (movement)\n                {\n                    case \"closing\":\n                        this.currentState = this.states[\"approaching\"];\n                        return \"approaching\";\n                    case \"none\":\n                        this.currentState = this.states[\"idle\"];\n                        return \"idle\";\n                    case \"increasing\":\n                        this.currentState = this.states[\"moving_away\"];\n                        return \"moving_away\";\n                }    \n\n\n\n\n\n\n","parameters":[]},"_keyDown":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this.currentState === null)\n                {\n                    console.log(\"Set initial state\");\n                    this.currentState = this.states[\"approaching\"];\n                }\n                if (this._keysDown.indexOf(e.key.char) == -1)\n                {\n                    this._keysDown.push(e.key.char);\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"_keyUp":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (!this.verifyCamera()) return;\n                if (this._keysDown.indexOf(e.key.char) !== -1)\n                {\n                    this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n                }\n                if (e.key.char == \" \")\n                {\n                    if (this.rockets > 0)\n                    {\n                        this.activateState(\"fire_rocket\");\n                        console.log(\"rockets: \" + this.rockets);\n                    }\n                }    \n\n\n\n\n\n\n","parameters":["e","d"]},"activateState":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                //console.log(\"activateState\");\n                var state = this.states[statename];\n\n                if (this.currentState.transitions.indexOf(statename) == -1)\n                {\n                    console.log(\"invalid transition!\");\n                    return;\n                }\n\n                if (state.transitionFunction)\n                    this[state.transitionFunction](this.currentState);\n\n                this.currentState = state;\n\n                for (var i in state.properties)\n                {\n                    console.log(state.properties[i]);\n                    this[i] = state.properties[i];\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"approachingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingTransition\");\n                this.approachingUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"approachingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"approachingUpdate\");\n                this.currentState = this.states[\"approaching\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"collidingTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingTransition\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":[]},"collidingUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"collidingUpdate\");\n                this.currentState = this.states[\"colliding\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"consumeFuel":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                if (this.fuel <= 0.0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                }\n                else\n                {\n                    this.fuel = this.fuel - this.fuelConsumptionRate;\n                    console.log(\"fuel: \" + this.fuel);\n                }    \n\n\n\n\n\n\n","parameters":[]},"defeatedTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedTransition\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":[]},"defeatedUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"defeatedUpdate\");\n                this.currentState = this.states[\"defeated\"];    \n\n\n\n\n\n\n","parameters":["statename"]},"facFollowBehavior":{"body":"\n var mass = this.physicsAPI.getMass();\n\n    if (args[0].indexOf(\"W\") !== -1)\n    {\n        this.consumeFuel();\n        if (this.currentState && this.currentState.name === this.states[\"out_of_gas\"].name)\n        {\n            console.log(\"(W) out of gas!\");\n            this.activateState(\"out_of_gas\");\n        }\n        else\n        {\n            debugger;\n            var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n            this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n            this.playMotorRunning();\n            switch (this.FACMovementDirection())\n            {\n                case \"approaching\":\n                    this.activateState(\"approaching\");\n                    break;\n                case \"idle\":\n                    this.activateState(\"idle\");\n                    break;\n                case \"moving_away\":\n                    this.activateState(\"moving_away\");\n                    break;\n            }\n        }\n    }\n    if (args[0].indexOf(\"S\") !== -1)\n    {\n        this.consumeFuel();\n        if (this.currentState && this.currentState.name === this.states[\"out_of_gas\"].name)\n        {\n            console.log(\"(S) out of gas!\");\n            this.activateState(\"out_of_gas\");\n        }\n        else\n        {\n            var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n            this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n            this.playMotorRunning();\n            switch (this.FACMovementDirection())\n            {\n                case \"approaching\":\n                    this.activateState(\"approaching\");\n                    break;\n                case \"idle\":\n                    this.activateState(\"idle\");\n                    break;\n                case \"moving_away\":\n                    this.activateState(\"moving_away\");\n                    break;\n            }\n        }\n    }\n    var vel = this.physicsAPI.getLinearVelocity();\n    vel = this.transformAPI.globalToLocalRotation(vel);\n    var speedTorqueFactor = (Math.abs(vel[0]) / 3);\n    if (args[0].indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (args[0].indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (args[0].indexOf(\" \") !== -1)\n    {\n        if (this.rockets > 0)\n        {\n            this.currentState = this.states[\"fire_rocket\"];\n        }\n        else\n        {\n            this.currentState = this.states[\"moving_away\"];\n        }\n    } \n","parameters":["args"]},"fire_rocketTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketTransition\");\n                this.fire_rocketUpdate(this.currentState);    \n\n\n\n\n\n\n","parameters":[]},"fire_rocketUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                console.log(\"fire_rocketUpdate\");\n                this.launchMissile();\n                this.playMissileLaunch();\n                this.rockets = this.rockets - 1;\n                if (this.rockets > 0)\n                {\n                    this.currentState = this.states[\"fire_rocket\"];\n                    console.log(\"rocketUpdate state fire \");\n                }\n                else\n                {\n                    this.currentState = this.states[\"idle\"];\n                    console.log(\"rocketUpdate state idle\");\n                }    \n\n\n\n\n\n\n","parameters":["statename"]},"hit":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n             var pos = args[0];\n                var force = args[1];\n                if (typeof force == 'number')\n                    this.health -= force;\n                else\n                    this.health -= 101;\n\n                if (this.health < 0)\n                {\n                    var def = this.explosionDef;\n                    var pos = this.transformAPI.getWorldPosition();\n                    def.properties.transform[12] = pos[0];\n                    def.properties.transform[13] = pos[1];\n                    def.properties.transform[14] = pos[2];\n                    def.properties.fuse = 1;\n                    vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null);\n                    this.parent.children.delete(this);\n                } \n\n\n\n\n\n\n","parameters":["args"]},"idleTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleTransition\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":[]},"idleUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"idleUpdate\");\n                this.currentState = this.states[\"idle\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"launchMissile":{"body":"\n\n\n\n\n\n\n\n\n         var def = this.missileDef;\n            var pos = this.children_by_name.MissileLauncher.worldTransform.slice();\n\n            pos[14] += 0;\n            def.properties.transform = pos;\n           // def.properties.___physics_velocity_linear = this.physicsAPI.getLinearVelocity();\n            def.properties.fired = true;\n            var now = performance.now();\n            // console.profile(\"launch\");\n            vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null, function()\n            {\n                console.log(performance.now() - now);\n            }); \n\n\n\n\n","parameters":[]},"moving_awayTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayTransition\");\n                this.moving_awayUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"moving_awayUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"moving_awayUpdate\");\n                this.currentState = this.states[\"moving_away\"];   \n\n\n\n\n\n\n","parameters":["statename"]},"out_of_gasTransition":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasTransition\");\n                //this.currentState = this.states[\"out_of_gas\"];\n                this.out_of_gasUpdate(this.currentState);   \n\n\n\n\n\n\n","parameters":[]},"out_of_gasUpdate":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"out_of_gasUpdate\");\n                console.log(statename);\n                if (this.fuel <= 0)\n                {\n                    this.currentState = this.states[\"out_of_gas\"];\n                    console.log(\"out_of_gasUpdate now out_of_gas state\");\n                }\n                else if (this.hullStrength <= 0)\n                {\n                    this.currentState = this.states[\"defeated\"];\n                    console.log(\"out_of_gasUpdate now defaeted state\");\n                }   \n\n\n\n\n\n\n","parameters":["statename"]},"playBulletHittingMetal":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingMetal\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletHittingWater":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletHittingWater\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playBulletWhizzingBy":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playBulletWhizzingBy\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playExplosion":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playExplosion\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/8d358349\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/d714ebe1\", false, 100);\n                // #3:\n                this.audioAPI.playSound(\"/sas/assets/3c6b353e\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playHelicopter":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               //console.log(\"playHelicopter\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/af90534a\", false, 100);\n                //#2:\n                this.audioAPI.playSound(\"/sas/assets/dc81768a\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMissileLaunch":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMissileLaunch\");\n                // #1:\n                //this.audioAPI.playSound(\"/sas/assets/744acf2e\", false, 100);\n                // #2:\n                //this.audioAPI.playSound(\"/sas/assets/4334801b\", false, 100);\n                // #3:\n                //this.audioAPI.playSound(\"/sas/assets/10b027bd\", false, 100);\n                // #4:\n                //this.audioAPI.playSound(\"/sas/assets/94d508e3\", false, 100);\n                // #5:\n                this.audioAPI.playSound(\"/sas/assets/263beb86\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorIdle":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorIdle\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playMotorRunning":{"body":"\n\n\n\n\n\n\n       //console.log(\"playMotorRunning\");\n          // #1:\n          //this.audioAPI.playSound(\"/sas/assets/2cb9fef9\", false, 100);\n          // #2:\n          //this.audioAPI.playSound(\"/sas/assets/994ee0c8\", false, 100);\n          // #3:\n          var sound = vwf.callMethod(this.id, \"getSound\", [\"/sas/assets/c253157d\"]);\n\n          if (sound == null || !sound.isPlaying())\n          {\n              this.audioAPI.playSound(\"/sas/assets/c253157d\", true, 100);\n          } \n\n\n\n","parameters":[]},"playMotorSputtering":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playMotorSputtering\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"playWarning":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               console.log(\"playWarning\");\n                this.audioAPI.playSound(\"\", false, 100);   \n\n\n\n\n\n\n","parameters":[]},"ready":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                 // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n                this.Scene.unbind(\"keyDown\",this._kd);\n                this.Scene.unbind(\"keyUp\",this._ku);\n                var self = this;\n                this._kd = function(e,d){self._keyDown(e,d)};\n                this._ku = function(e,d){self._keyUp(e,d)};\n                this.Scene.bind(\"keyDown\",this._kd);\n                this.Scene.bind(\"keyUp\",this._ku);                                                     \n\n\n\n\n\n\n","parameters":[]},"tick":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n               var waterDepth = 20;\n                var hullThick = 2.2;\n                var depthFloor = waterDepth + hullThick;\n                // The tick function is called 20 times every second.\n                // Write code here to animate over time\n                this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n                this.physicsAPI.wake();\n                var mass = this.physicsAPI.getMass();\n                var corners = [\n                    [this._length / 2, this.width / 2, 0],\n                    [this._length / 2, -this.width / 2, 0],\n                    [-this._length / 2, this.width / 2, 0],\n                    [-this._length / 2, -this.width / 2, 0],\n                ];\n\n                this.counter++;\n                var rocking = -mass / 5;\n                this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n                this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n                for (var i = 0; i < corners.length; i++)\n                {\n                    var corner = corners[i];\n                    var worldCorner = this.transformAPI.localToGlobal(corner);\n                    var depth = depthFloor - worldCorner[2];\n                    depth = Math.min(depth, 5);\n                    if (depth > 0)\n                    {\n\n                        this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n                        var vel = this.physicsAPI.getLinearVelocity();\n                        var torque = this.physicsAPI.getAngularVelocity();\n                        //    vel[0] *= .6;\n                        // vel[1] *= .6;\n                        vel[2] *= 1 - depth / 50;\n\n                        torque[0] *= 1 - depth / 100;\n                        torque[1] *= 1 - depth / 100;\n                        torque[2] *= 1 - depth / 100;\n                        this.physicsAPI.setAngularVelocity(torque);\n                        this.physicsAPI.setLinearVelocity(vel);\n                    }\n                    //  if (depth < 0)\n                    {\n\n                        this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n                        var vel = this.physicsAPI.getLinearVelocity();\n                        var torque = this.physicsAPI.getAngularVelocity();\n                    }\n\n                }\n\n                var depth = depthFloor - this.transformAPI.getPosition()[2]\n                depth = Math.min(depth, 5);\n                if (depth > 0)\n                {\n\n                    var vel = this.physicsAPI.getLinearVelocity();\n                    vel = this.transformAPI.globalToLocalRotation(vel);\n                    vel[0] *= 1.0 - depth / 100;\n                    vel[1] *= 1.0 - depth / 30;\n                    vel = this.transformAPI.localToGlobalRotation(vel);\n                    this.physicsAPI.setLinearVelocity(vel);\n\n                }\n\n                if (this._keysDown.indexOf(\"W\") !== -1)\n                {\n                    this.consumeFuel();\n                    if (this.currentState.name === this.states[\"out_of_gas\"].name)\n                    {\n                        console.log(\"(W) out of gas!\");\n                        this.activateState(\"out_of_gas\");\n                    }\n                    else\n                    {\n                        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n                        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n                        this.playMotorRunning();\n                        switch (this.FACMovementDirection())\n                        {\n                            case \"approaching\":\n                                this.activateState(\"approaching\");\n                                break;\n                            case \"idle\":\n                                this.activateState(\"idle\");\n                                break;\n                            case \"moving_away\":\n                                this.activateState(\"moving_away\");\n                                break;\n                        }\n                    }\n                }\n                if (this._keysDown.indexOf(\"S\") !== -1)\n                {\n                    this.consumeFuel();\n                    if (this.currentState.name === this.states[\"out_of_gas\"].name)\n                    {\n                        console.log(\"(S) out of gas!\");\n                        this.activateState(\"out_of_gas\");\n                    }\n                    else\n                    {\n                        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n                        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n                        this.playMotorRunning();\n                        switch (this.FACMovementDirection())\n                        {\n                            case \"approaching\":\n                                this.activateState(\"approaching\");\n                                break;\n                            case \"idle\":\n                                this.activateState(\"idle\");\n                                break;\n                            case \"moving_away\":\n                                this.activateState(\"moving_away\");\n                                break;\n                        }\n                    }\n                }\n                var vel = this.physicsAPI.getLinearVelocity();\n                vel = this.transformAPI.globalToLocalRotation(vel);\n                var speedTorqueFactor = (Math.abs(vel[0]) / 3);\n                if (this._keysDown.indexOf(\"A\") !== -1)\n                {\n\n                    this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n                    var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n                    this.physicsAPI.addTorque(force);\n                }\n                if (this._keysDown.indexOf(\"D\") !== -1)\n                {\n                    this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n                    var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n                    this.physicsAPI.addTorque(force);\n                }\n                if (this._keysDown.indexOf(\" \") !== -1)\n                {\n                    if (this.rockets > 0)\n                    {\n                        this.currentState = this.states[\"fire_rocket\"];\n                    }\n                    else\n                    {\n                        this.currentState = this.states[\"moving_away\"];\n                    }\n                }   \n\n\n\n\n\n\n","parameters":[]},"verifyCamera":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n                  var cam = this.Scene.clientAPI.getCameraForClient(vwf.client());\n\n                if (!cam || cam.id != this.controllingCamera) return false;\n                return true;      \n\n\n\n\n\n\n","parameters":[]}},"properties":{"DisplayName":"FAC_SLAVE1","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[-0.0205620388669852,0.137373529226051,0.000692897715996474],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[-0.115731220145219,0.602527779520543,-0.000487978426872444],"___physics_mass":8051.2,"___physics_velocity_angular":[0.02765009179711342,-0.1445750892162323,0.00038580354885198176],"___physics_velocity_linear":[-0.01912243291735649,0.10449027270078659,-0.0032515337225049734],"_keysDown":[],"_length":7,"activeState":"active","bullets_50_cal":1000,"controllingCamera":"SandboxCamera-vwf-N373ec60b","counter":14602,"currentState":null,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"explosionDef":{"continues":"/sas/assets/d3402bc3","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"fuel":100,"fuelConsumptionRate":0.01,"health":100,"height":1.2,"hostile":true,"hullStrength":100,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"blendMode":1,"color":{"a":1,"b":1,"g":1,"r":1},"depthtest":true,"depthwrite":true,"emit":{"b":0,"g":0,"r":0},"fog":true,"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"metal":false,"reflect":0.8,"shadeless":false,"shading":true,"shadow":true,"shininess":15,"side":0,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1,"type":"phong","vertexColors":false,"wireframe":false},"missileDef":{"continues":"/sas/assets/d62299d5","properties":{"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},"owner":"ADLteam","physicsAPI":{},"rangeToTarget":1000,"rockets":5,"sourceAssetId":"1ad6adad","states":{"approaching":{"name":"approaching","properties":{},"transitionFunction":"approachingTransition","transitions":["approaching","moving_away","idle","out_of_gas","fire_rocket","colliding","defeated"],"updateFunction":"approachingUpdate"},"colliding":{"name":"colliding","properties":{},"transitionFunction":"collidingTransition","transitions":["colliding","defeated"],"updateFunction":"collidingUpdate"},"defeated":{"name":"defeated","properties":{},"transitionFunction":"defeatedTransition","transitions":["defeated"],"updateFunction":"defeatedUpdate"},"fire_rocket":{"name":"fire_rocket","properties":{},"transitionFunction":"fire_rocketTransition","transitions":["approaching","fire_rocket","moving_away","idle","colliding","defeated"],"updateFunction":"fire_rocketUpdate"},"idle":{"name":"idle","properties":{},"transitionFunction":"idleTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"idleUpdate"},"moving_away":{"name":"moving_away","properties":{},"transitionFunction":"moving_awayTransition","transitions":["moving_away","idle","out_of_gas","colliding","defeated"],"updateFunction":"moving_awayUpdate"},"out_of_gas":{"name":"out_of_gas","properties":{},"transitionFunction":"out_of_gasTransition","transitions":["out_of_gas","colliding","defeated"],"updateFunction":"out_of_gasUpdate"}},"transform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265893699601293,0.9992753267288208,0,11,-16.75,20.5,1],"type":"Primitive","visible":false,"warningsReceived":0,"width":2.5,"worldTransform":[0.18804042041301727,-0.9821426272392273,0.006052142009139061,0,0.98142409324646,0.18813441693782806,0.03757866099476814,0,-0.0380462221801281,-0.0011265893699601293,0.9992753267288208,0,11,-16.75,20.5,1]},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N75985778"},{"DisplayName":null,"glyphURL":"../vwf/view/editorview/images/icons/scene.png","simTime":0,"placemarks":{"Origin":[0,0,0]},"navmode":"none","sunColor":[1,0.945098039215686,0.6],"sunDirection":[1.55,-0.2,1],"sunIntensity":1.3,"shadowDarkness":0.65,"ambientColor":[0.35,0.35,0.35],"fogColor":[0.980392156862745,0.803921568627451,0.588235294117647],"fogNear":0,"fogFar":50,"fogType":"exp","fogDensity":0.003,"fogVFalloff":0.539,"fogVFalloffStart":22.6,"skyColorBlend":0.5,"skyFogBlend":0.16,"skyApexColor":[0.305882352941176,0.603921568627451,0.949019607843137],"skyHorizonColor":[1,0.92156862745098,0.749019607843137],"___physics_gravity":[0,0,-9.8],"___physics_accuracy":10,"___physics_active":true,"vAtmosphereDensity":0.0005,"playMode":"stop","octreeObjects":5,"octreeDepth":16,"octreeExtents":640,"materialDef":{"shininess":4,"alpha":1,"ambient":{"r":0.8,"g":0.8,"b":0.8},"color":{"r":1,"g":1,"b":1,"a":1},"emit":{"r":0,"g":0,"b":0},"reflect":0,"shadeless":false,"shadow":true,"specularColor":{"r":1,"g":0.6509803921568628,"b":0},"specularLevel":0.305,"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0.11,"offsety":0.11,"rot":0,"scalex":"10","scaley":"10","src":"./contentlibraries/environments/assets/dirt.jpg"},{"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"rot":0,"blendMode":0,"mapTo":"4","mapInput":0,"alpha":0.27,"src":"./contentlibraries/environments/assets/waternormal.jpg"}],"type":"phong","side":2,"wireframe":false,"metal":false,"combine":0,"depthtest":true,"depthwrite":true},"skyTexture":"cloudy_noon","owner":"ADLteam","type":"scene","skyAtmosphereDensity":1}]