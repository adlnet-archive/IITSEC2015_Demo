[{"children":{"N96b82f77":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoatAll.jpg"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"Rob","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N96b82f77"}},"extends":"box2.vwf","methods":{"_keyDown":{"body":"                   if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) == -1)\n    {\n        this._keysDown.push(e.key.char);\n    }                   ","parameters":["e","d"]},"_keyUp":{"body":"                   if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) !== -1)\n    {\n        this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n    }                   ","parameters":["e","d"]},"ready":{"body":"                   // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n    this.Scene.unbind(\"keyDown\",this._kd);\n    this.Scene.unbind(\"keyUp\",this._ku);\n    var self = this;\n    this._kd = function(e,d){self._keyDown(e,d)};\n    this._ku = function(e,d){self._keyUp(e,d)};\n    this.Scene.bind(\"keyDown\",this._kd);\n    this.Scene.bind(\"keyUp\",this._ku);                   ","parameters":[]},"tick":{"body":"                   var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, 10 * mass);\n        var force = this.transformAPI.localToGlobal(3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -10 * mass);\n        var force = this.transformAPI.localToGlobal(-3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }                   ","parameters":[]}},"properties":{"DisplayName":"box2","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[0,0,0],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":8051.2,"___physics_velocity_angular":[0.04813278838992119,0.028283098712563515,0.00011018114309990779],"___physics_velocity_linear":[1.978766306365287e-8,-8.521955408014037e-8,0.000007447796633641701],"_keysDown":[],"_length":7,"controllingCamera":null,"counter":14559,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"height":1.2,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","physicsAPI":{},"transform":[0.980392575263977,0.19698505103588104,-0.005225939676165581,0,-0.19630444049835205,0.9786295294761658,0.061227910220623016,0,0.01717524044215679,-0.059001512825489044,0.9981101155281067,0,23.72933006286621,-78.58842468261719,20.669479370117188,1],"type":"Primitive","visible":false,"width":2.5},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N189974cd"},{"extends":"plane2.vwf","methods":{"tick":{"body":"                // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.materialDef.layers[0].offsetx += .001                ","parameters":[]}},"properties":{"DisplayName":"plane2","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":1000,"castShadows":false,"materialDef":{"alpha":0.75,"ambient":{"b":0.670588,"g":0.443137,"r":0.282352},"color":{"a":1,"b":0.670588,"g":0.443137,"r":0.282352},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":"4","offsetx":14.5589999999974,"offsety":0,"rot":0,"scalex":"50","scaley":"50","src":"../vwfDataManager.svc/texture?UID=waternormal.jpg"}],"reflect":5.2,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1,"type":"phong"},"owner":"Rob","renderDepth":1,"transform":[0.5,-0.866025984287262,0,0,0.8660249710083008,0.5,0,0,0,0,1,0,0,0,20.25,1],"type":"Primitive","width":1000},"random":{"c":1,"s0":0.328179,"s1":0.047833,"s2":0.328243},"sequence":0,"source":"vwf/model/threejs/plane.js","type":"subDriver/threejs","name":"N34af7f23"},{"children":{"N3e329d9d":{"extends":"seek.vwf","properties":{"DisplayName":"seek1","Offset":[8,0,4],"Target":"box2-vwf-Nc5cb6be","owner":"Rob","strength":0.3,"type":"behavior"},"random":{"c":1,"s0":0.127052,"s1":0.514706,"s2":0.823928},"sequence":0,"name":"N3e329d9d"}},"extends":"SandboxCamera.vwf","methods":{"tick":{"body":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                        var node = this.Scene.findNodeByID(this.objectToLookAt);\n                                            var pos = [0, 0, 0];\n                                            if (node)\n                                                pos = node.transformAPI.localToGlobal([0, 0, 0]);\n                                            var offset = this.offset.internal_val;\n                                            offset = MATH.scaleVec3(offset, this.zoom);\n                                           \n                                            this.transformAPI.lookat(pos, '', '-Y', 'Z');\n","parameters":[]}},"properties":{"DisplayName":"LookatCamera","EditorData":{"Target":{"displayname":"Target","property":"objectToLookAt","type":"nodeid"}},"last_x":0,"last_y":0,"mousedown":0,"objectToLookAt":"box2-vwf-Nc5cb6be","offset":[1,0,0],"owner":"Rob","quaternion":[-0.168121,0.013128,-0.076735,0.982687],"rotation":[-0.907434,0.070859,-0.414178,21.353824],"scale":[1,0.998998,0.999],"transform":[0.9809210300445557,0.19440500438213348,-1.0880123113565787e-7,0,-0.17473194003105164,0.881655216217041,-0.4360679090023041,0,-0.08477344363927841,0.42774698138237,0.8988003134727478,0,42.63009262084961,-67.71809387207031,24.61688232421875,1],"translation":[-4.978086,-9.806168,1.459538],"zoom":1},"random":{"c":1,"s0":0.762165,"s1":0.779216,"s2":0.235236},"sequence":0,"source":"vwf/model/threejs/camera.js","type":"subDriver/threejs","name":"N373ec60b"},{"children":{"N3aba3654":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoatAll.jpg"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"Rob","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N3aba3654"}},"extends":"box2.vwf","methods":{"_keyDown":{"body":"                    if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) == -1)\n    {\n        this._keysDown.push(e.key.char);\n    }                    ","parameters":["e","d"]},"_keyUp":{"body":"                    if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) !== -1)\n    {\n        this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n    }                    ","parameters":["e","d"]},"ready":{"body":"                    // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n    this.Scene.unbind(\"keyDown\",this._kd);\n    this.Scene.unbind(\"keyUp\",this._ku);\n    var self = this;\n    this._kd = function(e,d){self._keyDown(e,d)};\n    this._ku = function(e,d){self._keyUp(e,d)};\n    this.Scene.bind(\"keyDown\",this._kd);\n    this.Scene.bind(\"keyUp\",this._ku);                    ","parameters":[]},"tick":{"body":"                    var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, 10 * mass);\n        var force = this.transformAPI.localToGlobal(3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -10 * mass);\n        var force = this.transformAPI.localToGlobal(-3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }                    ","parameters":[]}},"properties":{"DisplayName":"box3","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[0,0,0],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":8051.2,"___physics_velocity_angular":[0.01769332028925419,0.018547290936112404,0.00013483790098689497],"___physics_velocity_linear":[-1.782524648719086e-11,1.0934565608522462e-7,-0.000010487952749826945],"_keysDown":[],"_length":7,"controllingCamera":null,"counter":14559,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"height":1.2,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","physicsAPI":{},"transform":[0.999169647693634,-0.04015263170003891,-0.006916026584804058,0,0.040450211614370346,0.9979162216186523,0.050269026309251785,0,0.004883181303739548,-0.050507038831710815,0.9987117648124695,0,54.83879852294922,-59.944984436035156,20.669483184814453,1],"type":"Primitive","visible":false,"width":2.5},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N6040ea72"},{"extends":"box2.vwf","properties":{"DisplayName":"box5","___physics_activation_state":1,"___physics_angular_velocity":[0,0,0],"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":10,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","transform":[0.984807014465332,0,0.17364799976348877,0,0,1,0,0,-0.17364899814128876,0,0.984807014465332,0,76.25,-72.5,20.000999450683594,1],"type":"Primitive","width":10},"random":{"c":1,"s0":0.474251,"s1":0.473168,"s2":0.773922},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N81c74723"},{"children":{"N15586c73":{"children":{"N94f3b0c9":{"extends":"SandboxCamera.vwf","properties":{"DisplayName":"Camera1","owner":"Rob","transform":[-1.0000009536743164,0,-9.999999974752427e-7,0,0,0.08715499937534332,0.9961940050125122,0,-9.999999974752427e-7,0.9961940050125122,-0.08715599775314331,0,24.5,15.553004264831543,5.666027069091797,1]},"random":{"c":1,"s0":0.041035,"s1":0.718352,"s2":0.528338},"sequence":0,"source":"vwf/model/threejs/camera.js","type":"subDriver/threejs","name":"N94f3b0c9"}},"extends":"asset.vwf","properties":{"DisplayName":"Barry1","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":[{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1},{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1},{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1},{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1},{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/3drtexture?pid=adl:1588&file=barryatlas.png"}],"reflect":0,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1}],"owner":"Rob","transform":[1,0,0,0,0,0,1,0,0,-1,0,0,0.25,-1.5,-0.75,1],"type":"3DR Object"},"random":{"c":1,"s0":0.529011,"s1":0.196021,"s2":0.923128},"sequence":0,"source":"./vwfdatamanager.svc/3drdownload?pid=adl:1588","type":"subDriver/threejs/asset/vnd.osgjs+json+compressed","name":"N15586c73"}},"extends":"box2.vwf","methods":{"tick":{"body":"        var waterDepth = 20;\n    var hullThick = 2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 2;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n           \n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n        //this.physicsAPI.addForceAtCenter(this.transformAPI.localToGlobal(0, 100, 0));\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 10;\n        vel[1] *= 1.0 - depth / 3;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }        ","parameters":[]}},"properties":{"DisplayName":"box2","___physics_activation_state":4,"___physics_angular_velocity":[0,0,0],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":80051.2,"___physics_velocity_angular":[0.007212651427835226,0.002474607201293111,0.00000320021717925556],"___physics_velocity_linear":[-4.188341340416457e-10,2.1690015117314942e-8,-0.0000016648144764985773],"_length":135,"counter":14559,"height":10,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","physicsAPI":{},"transform":[0.9999996423721313,-0.00013733036757912487,-0.0008640167070552707,0,0.00015142875781748444,0.9998664855957031,0.016338415443897247,0,0.0008616576087661088,-0.016338540241122246,0.9998661279678345,0,35.97193908691406,18.46609115600586,20.423479080200195,1],"type":"Primitive","visible":false,"width":20},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N8524199"},{"extends":"SandboxParticleSystem.vwf","methods":{"tick":{"body":"                 // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.emitterPosition = this.Scene.children_by_name.box4.children_by_name.enginePos.transformAPI.getWorldPosition();\n   findviewnode(this.id).children[0].children[0].frustumCulled =false                 ","parameters":[]}},"properties":{"DisplayName":"Wake","alphaTest":0,"colorRange":[0,0,0.231372,0],"damping":-0.01,"depthTest":false,"emitterPosition":[41.5708923339844,-62.7129135131836,19.8976764678955],"emitterSize":[1,1,0.4],"emitterType":"box","endAlpha":0.24,"endColor":[0.741176,0.854901,0.988235,0.24],"endColor_noAplha":[0.741176,0.854901,0.988235],"endSize":3,"gravity":-0.02,"image":"../vwfDataManager.svc/texture?UID=smoke.png","mamSpin":2.6,"maxOrientation":19.6,"maxVelocity":[0.01,0.01,0.01],"minOrientation":-14.8,"minSpin":-3.8,"minVelocity":[-0.011,-0.01,-0.01],"owner":"Rob","renderDepth":-3,"rotation":{"_x":0,"_y":0,"_z":0,"_order":"XYZ"},"sizeRange":0.62,"solver":"Analytic","startAlpha":0.98,"startColor":[1,1,1,0.98],"transform":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],"type":"ParticleSystem"},"random":{"c":1,"s0":0.337756,"s1":0.105646,"s2":0.018279},"sequence":0,"name":"N991d8a3"},{"children":{"N2ac976e1":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoatAll.jpg"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"Rob","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae","type":"subDriver/threejs/asset/vnd.collada+xml","name":"N2ac976e1"}},"extends":"box2.vwf","methods":{"_keyDown":{"body":"                     if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) == -1)\n    {\n        this._keysDown.push(e.key.char);\n    }                     ","parameters":["e","d"]},"_keyUp":{"body":"                     if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) !== -1)\n    {\n        this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n    }                     ","parameters":["e","d"]},"ready":{"body":"                     // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n    this.Scene.unbind(\"keyDown\",this._kd);\n    this.Scene.unbind(\"keyUp\",this._ku);\n    var self = this;\n    this._kd = function(e,d){self._keyDown(e,d)};\n    this._ku = function(e,d){self._keyUp(e,d)};\n    this.Scene.bind(\"keyDown\",this._kd);\n    this.Scene.bind(\"keyUp\",this._ku);                     ","parameters":[]},"tick":{"body":"                     var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, 10 * mass);\n        var force = this.transformAPI.localToGlobal(3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -10 * mass);\n        var force = this.transformAPI.localToGlobal(-3 * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }                     ","parameters":[]}},"properties":{"DisplayName":"box4","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[0,0,0],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":8051.2,"___physics_velocity_angular":[0.01877429336309433,0.018633071333169937,0.0001329267688561231],"___physics_velocity_linear":[-8.595830713886699e-10,1.0955155005376582e-7,-0.000010515543181099929],"_keysDown":[],"_length":7,"controllingCamera":null,"counter":14559,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"height":1.2,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","physicsAPI":{},"transform":[0.9994598031044006,-0.03213939443230629,-0.006865073461085558,0,0.032446637749671936,0.9981873631477356,0.05068763718008995,0,0.005223559681326151,-0.05088300257921219,0.9986909627914429,0,-3.022453546524048,-71.38935852050781,20.669483184814453,1],"type":"Primitive","visible":false,"width":2.5},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"Na673181e"},{"children":{"N16f23ee5":{"extends":"http://vwf.example.com/node3.vwf","properties":{"DisplayName":"enginePos","glyphURL":"../vwf/view/editorview/images/icons/sphere.png","owner":"Rob","transform":[1,0,0,0,0,1,0,0,-9.999999974752427e-7,0,1,0,3,0,-0.75,1],"transformAPI":{"COORDINATES":{"LOCAL":"local","GLOBAL":"global","PARENT":"parent"}},"worldTransform":[0.18855854868888855,-0.9820317029953003,-0.007705673575401306,0,0.9812401533126831,0.1887158900499344,-0.03942130133509636,0,0.04016696289181709,-0.00012691043957602233,0.9991929531097412,0,41.55948257446289,-62.683143615722656,19.896942138671875,1]},"random":{"c":1,"s0":0.022454,"s1":0.002702,"s2":0.55584},"sequence":0,"name":"N16f23ee5"},"N1f0f830f":{"extends":"box2.vwf","properties":{"DisplayName":"box7","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"_length":3.45,"castShadows":false,"height":1.13,"materialDef":{"alpha":0,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.577350269189626,"g":0.577350269189626,"r":0.577350269189626},"specularLevel":1,"type":"phong"},"owner":"Rob","renderDepth":7,"transform":[1,0,9.999999974752427e-7,0,0,1,0,0,0,0,1,0,1,0,-0.2499990016222,1],"type":"Primitive","width":2.18},"random":{"c":1,"s0":0.198099663946778,"s1":0.0275812551844865,"s2":0.352169041289017},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N1f0f830f"},"N36848c63":{"events":{"pointerClick":{"body":"         this.parent.launchMissile()","parameters":["         eventData","         nodeData         "]}},"extends":"box2.vwf","properties":{"DisplayName":"MissileLauncher","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"height":1.61,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","transform":[0.08618500083684921,-0.022557999938726425,0.9960219860076904,0,0.0010019999463111162,-0.9997419714927673,-0.02273000031709671,0,0.9962769746780396,0.002956999931484461,-0.08614099770784378,0,1,0,1.5,1],"type":"Primitive","visible":false,"width":1.36},"random":{"c":1,"s0":0.778299,"s1":0.286493,"s2":0.191579},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"N36848c63"},"Ndef1df6a":{"extends":"asset.vwf","properties":{"DisplayName":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1","___physics_activation_state":1,"___physics_deactivation_time":0,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"materialDef":{"alpha":1,"ambient":{"b":0.584,"g":0.584,"r":0.584},"color":{"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"scalex":1,"scaley":1,"src":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoatAll.jpg"}],"reflect":0.001,"shininess":0.004002,"side":0,"specularColor":{"b":0,"g":0,"r":0},"specularLevel":1,"type":"phong"},"owner":"Rob","transform":[-9.999999974752427e-7,1,-9.999999974752427e-7,0,-1.0000009536743164,-9.999999974752427e-7,-9.999999974752427e-7,0,-9.999999974752427e-7,0,1,0,0.5,0,-0.5,1]},"random":{"c":1,"s0":0.375302,"s1":0.872168,"s2":0.110384},"sequence":0,"source":"./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae","type":"subDriver/threejs/asset/vnd.collada+xml","name":"Ndef1df6a"}},"extends":"box2.vwf","methods":{"_keyDown":{"body":"         // if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) == -1)\n    {\n        this._keysDown.push(e.key.char);\n    }         ","parameters":["e","d"]},"_keyUp":{"body":"         // if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) !== -1)\n    {\n        this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n    }\n    if(e.key.char == \" \")\n    {\n        this.launchMissile();   \n    }         ","parameters":["e","d"]},"launchMissile":{"body":"      var def = this.missileDef.internal_val;\n    var pos = this.children_by_name.MissileLauncher.worldTransform.internal_val.slice();\n\n    pos[14] += 0;\n    def.properties.transform = pos;\n    def.properties.fired = true;\n    var now = performance.now();\n   // console.profile(\"launch\");\n    vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(def), null, function()\n    {\n        console.log(performance.now() - now);\n    //   console.profileEnd(\"launch\");\n    });      ","parameters":[]},"ready":{"body":"                  // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n    this.Scene.unbind(\"keyDown\",this._kd);\n    this.Scene.unbind(\"keyUp\",this._ku);\n    var self = this;\n    this._kd = function(e,d){self._keyDown(e,d)};\n    this._ku = function(e,d){self._keyUp(e,d)};\n    this.Scene.bind(\"keyDown\",this._kd);\n    this.Scene.bind(\"keyUp\",this._ku);                  ","parameters":[]},"tick":{"body":"                 var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    var vel = this.physicsAPI.getLinearVelocity();\n    vel = this.transformAPI.globalToLocalRotation(vel);\n    var speedTorqueFactor = (Math.abs(vel[0])/3);\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }                 ","parameters":[]}},"properties":{"DisplayName":"box4","EditorData":{"controllingCamera":{"displayname":"Controlling Camera","property":"controllingCamera","type":"nodeid"}},"___physics_activation_state":4,"___physics_angular_velocity":[0,0,0],"___physics_damping":0.4,"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":8051.2,"___physics_velocity_angular":[-0.021870581433176994,0.14611580967903137,0.0007369928644038737],"___physics_velocity_linear":[-0.11752059310674667,0.6118942499160767,-0.0004697827680502087],"_keysDown":[],"_length":7,"controllingCamera":"SandboxCamera-vwf-N373ec60b","counter":14559,"editorData":{"controllingCamera":{"displayName":"controllingCamera","type":"nodeID"}},"height":1.2,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0,"offsety":0,"rot":0,"scalex":1,"scaley":1,"src":"checker.jpg"}],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"missileDef":{"children":{"N44b51829":{"extends":"SandboxParticleSystem.vwf","properties":{"DisplayName":"ParticleSystem1","additive":true,"counter":0,"depthTest":false,"image":"../vwfDataManager.svc/texture?UID=fire.png","maxLifeTime":23,"maxOrientation":19.6,"maxRate":5,"maxVelocity":[1,0,0.2],"minLifeTime":23,"minOrientation":-21.4,"minVelocity":[-1,0,0.011],"owner":"Rob","particleCount":100,"startSize":0.3,"transform":[1,0,0,0,0,-1,0,0,0,-0.000001,-1,0,-6.78589867630919e-9,2.58738255126678e-9,0.499998783646291,1],"type":"ParticleSystem","velocityMode":"spherical","visible":false},"random":{"c":1,"s0":0.956842,"s1":0.666903,"s2":0.367152},"sequence":0}},"events":{"pointerClick":{"body":"                    this.fired = true;","parameters":["                    eventData","                    nodeData                    "]}},"extends":"cylinder2.vwf","methods":{"tick":{"body":"           if (!this.fired)\n        return;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n\n    if (this.counter < 2)\n    {\n        this.physicsAPI.addTorque(this.transformAPI.localToGlobal(this.random() * 200, this.random() * 200, this.random() * 1));\n    }\n    if (this.counter < 30)\n    {\n        var force = this.transformAPI.localToGlobal(0, 0, -30 * this.physicsAPI.getMass());\n        this.physicsAPI.addForceAtCenter(force);\n        this.children_by_name.ParticleSystem1.visible = true;\n        this.physicsAPI.addTorque(this.transformAPI.localToGlobal(this.random() * 10, this.random() * 10, this.random() * 1));\n    }\n    if (this.counter > 60)\n        this.children_by_name.ParticleSystem1.visible = false;\n    this.counter++;\n\n    if (this.counter > 90)\n        vwf.deleteNode(this.id);           ","parameters":[]}},"properties":{"DisplayName":"cylinder4","___physics_activation_state":1,"___physics_angular_velocity":[0,0,0],"___physics_constant_force":[0,0,980],"___physics_deactivation_time":0,"___physics_enabled":true,"___physics_linear_velocity":[0,0,0],"___physics_mass":100,"___physics_velocity_angular":[0,0,0],"___physics_velocity_linear":[0,0,0],"counter":0,"fired":true,"height":1.6,"materialDef":{"alpha":1,"ambient":{"b":1,"g":1,"r":1},"color":{"a":1,"b":1,"g":1,"r":1},"emit":{"b":0,"g":0,"r":0},"layers":[],"reflect":0.8,"shadeless":false,"shadow":true,"shininess":15,"specularColor":{"b":0.57735,"g":0.57735,"r":0.57735},"specularLevel":1},"owner":"Rob","radius":0.05,"transform":[-0.0584009923040867,-0.0746181011199951,0.995498895645142,0,-0.95090389251709,0.307754725217819,-0.0327179729938507,0,-0.30392786860466,-0.948533833026886,-0.0889286622405052,0,26.1810092926025,-55.6923065185547,22.1698589324951,1],"type":"Primitive"},"random":{"c":2042503,"s0":0.573731,"s1":0.972116,"s2":0.028229},"sequence":0,"source":"vwf/model/threejs/cylinder.js","type":"subDriver/threejs"},"owner":"Rob","physicsAPI":{},"transform":[0.18855854868888855,-0.9820317029953003,-0.007705673575401306,0,0.9812401533126831,0.1887158900499344,-0.03942130133509636,0,0.040167152881622314,-0.00012789247557520866,0.9991929531097412,0,41.02393341064453,-59.737144470214844,20.66945457458496,1],"type":"Primitive","visible":false,"width":2.5},"random":{"c":1,"s0":0.134394,"s1":0.921757,"s2":0.045269},"sequence":0,"source":"vwf/model/threejs/box.js","type":"subDriver/threejs","name":"Nc5cb6be"},{"DisplayName":null,"glyphURL":"../vwf/view/editorview/images/icons/scene.png","simTime":14559,"placemarks":{"Origin":[0,0,0]},"navmode":"none","sunColor":[1,1,1],"sunDirection":[0.5,0.5,1],"sunIntensity":0.8,"shadowDarkness":0.5,"ambientColor":[0.35,0.35,0.35],"fogColor":[1,1,1],"fogNear":100,"fogFar":1000,"fogType":0,"fogDensity":0.005,"fogVFalloff":1.3,"fogVFalloffStart":0,"skyColorBlend":0,"skyFogBlend":0,"skyApexColor":[0.9,0.9,0.9],"skyHorizonColor":[0.8,0.8,0.8],"___physics_gravity":[0,0,-9.8],"___physics_accuracy":10,"___physics_active":true,"vAtmosphereDensity":0.0005,"playMode":"stop","octreeObjects":5,"octreeDepth":16,"octreeExtents":640,"materialDef":{"shininess":15,"alpha":1,"ambient":{"r":0.8,"g":0.8,"b":0.8},"color":{"r":1,"g":1,"b":1,"a":1},"emit":{"r":0,"g":0,"b":0},"reflect":0.8,"shadeless":false,"shadow":true,"specularColor":{"r":0.5773502691896258,"g":0.5773502691896258,"b":0.5773502691896258},"specularLevel":1,"wireframe":true,"layers":[{"alpha":1,"blendMode":0,"mapInput":0,"mapTo":1,"offsetx":0.11,"offsety":0.11,"rot":0,"scalex":27.77777777777778,"scaley":27.77777777777778,"src":"textures/grid2.gif"}],"type":"phong"},"skyTexture":"StormClouds","owner":"Rob","type":"scene"}]