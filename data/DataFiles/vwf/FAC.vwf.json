{
    "children": {
        "Rolando": {
            "extends": "http://vwf.example.com/node3.vwf",
            "properties": {
                "DisplayName": "enginePos",
                "glyphURL": "../vwf/view/editorview/images/icons/sphere.png",
                "owner": "Rob",
                "transform": [1, 0, 7.575992277963906e-9, 0, 0, 1, 0, 0, -7.575992277963906e-9, 0, 1, 0, 3, 0, -0.75, 1]
            },
            "random": {
                "c": 1,
                "s0": 0.0224549816921353,
                "s1": 0.00270245247520506,
                "s2": 0.555840898770839
            },
            "sequence": 0
        },
        "N60d4a8a7": {
            "extends": "asset.vwf",
            "properties": {
                "DisplayName": "./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae1",
                "___physics_activation_state": 1,
                "___physics_deactivation_time": 0,
                "___physics_velocity_angular": [0, 0, 0],
                "___physics_velocity_linear": [0, 0, 0],
                "materialDef": {
                    "alpha": 1,
                    "ambient": {
                        "b": 0.584,
                        "g": 0.584,
                        "r": 0.584
                    },
                    "color": {
                        "b": 1,
                        "g": 1,
                        "r": 1
                    },
                    "emit": {
                        "b": 0,
                        "g": 0,
                        "r": 0
                    },
                    "layers": [{
                            "alpha": 1,
                            "mapInput": 0,
                            "mapTo": 1,
                            "offsetx": 0,
                            "offsety": 0,
                            "scalex": 1,
                            "scaley": 1,
                            "src": "./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoatAll.jpg"
                        }
                    ],
                    "reflect": 0.001,
                    "shininess": 0.004002,
                    "side": 0,
                    "specularColor": {
                        "b": 0,
                        "g": 0,
                        "r": 0
                    },
                    "specularLevel": 1,
                    "type": "phong"
                },
                "owner": "Rob",
                "transform": [-2.7615337572228782e-8, 1.0000001192092896, -2.0921357778645576e-16, 0, -1.0000001192092896, -2.7615337572228782e-8, -7.575993166142325e-9, 0, -7.575992277963906e-9, 0, 1, 0, 0.5, 0, -0.5, 1]
            },
            "random": {
                "c": 1,
                "s0": 0.375302987638861,
                "s1": 0.872168111847714,
                "s2": 0.110384049126878
            },
            "sequence": 0,
            "source": "./vwfdatamanager.svc/DataFile/Navy/AttackSpeedBoat.dae",
            "type": "subDriver/threejs/asset/vnd.collada+xml"
        }
    },
    "extends": "box2.vwf",
    "methods": {
        "_keyDown": {
            "body": "    if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) == -1)\n    {\n        this._keysDown.push(e.key.char);\n    }    ",
            "parameters": ["e", "d"]
        },
        "_keyUp": {
            "body": "    if (this.Scene.clientAPI.getCameraForClient(vwf.client()).id != this.controllingCamera) return;\n    if (this._keysDown.indexOf(e.key.char) !== -1)\n    {\n        this._keysDown.splice(this._keysDown.indexOf(e.key.char), 1);\n    }    ",
            "parameters": ["e", "d"]
        },
        "ready": {
            "body": "    // The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n    this.Scene.unbind(\"keyDown\",this._kd);\n    this.Scene.unbind(\"keyUp\",this._ku);\n    var self = this;\n    this._kd = function(e,d){self._keyDown(e,d)};\n    this._ku = function(e,d){self._keyUp(e,d)};\n    this.Scene.bind(\"keyDown\",this._kd);\n    this.Scene.bind(\"keyUp\",this._ku);    ",
            "parameters": []
        },
        "tick": {
            "body": "   var waterDepth = 20;\n    var hullThick = 2.2;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 5;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    if (this._keysDown.indexOf(\"W\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(-10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    if (this._keysDown.indexOf(\"S\") !== -1)\n    {\n        var force = this.transformAPI.localToGlobal(10 * mass, 0, 0);\n        this.physicsAPI.addForceAtCenter(force[0], force[1], force[2]);\n    }\n    var vel = this.physicsAPI.getLinearVelocity();\n    vel = this.transformAPI.globalToLocalRotation(vel);\n    var speedTorqueFactor = (Math.abs(vel[0])/3);\n    if (this._keysDown.indexOf(\"A\") !== -1)\n    {\n\n        this.physicsAPI.addTorque(0, 0, speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }\n    if (this._keysDown.indexOf(\"D\") !== -1)\n    {\n        this.physicsAPI.addTorque(0, 0, -speedTorqueFactor * mass * 3);\n        var force = this.transformAPI.localToGlobal(-speedTorqueFactor * mass, 0, 0);\n        this.physicsAPI.addTorque(force);\n    }   ",
            "parameters": []
        }
    },
    "properties": {
        "DisplayName": "box4",
        "EditorData": {
            "controllingCamera": {
                "displayname": "Controlling Camera",
                "property": "controllingCamera",
                "type": "nodeid"
            }
        },
        "___physics_activation_state": 4,
        "___physics_angular_velocity": [0, 0, 0],
        "___physics_damping": 0.4,
        "___physics_deactivation_time": 0,
        "___physics_enabled": true,
        "___physics_linear_velocity": [0, 0, 0],
        "___physics_mass": 8051.2,
        "___physics_velocity_angular": [0, 0, 0],
        "___physics_velocity_linear": [0, 0, 0],
        "_keysDown": [],
        "_length": 7,
        "controllingCamera": "SandboxCamera-vwf-N373ec60b",
        "counter": 0,
        "editorData": {
            "controllingCamera": {
                "displayName": "controllingCamera",
                "type": "nodeID"
            }
        },
        "height": 1.2,
        "materialDef": {
            "alpha": 1,
            "ambient": {
                "b": 1,
                "g": 1,
                "r": 1
            },
            "color": {
                "a": 1,
                "b": 1,
                "g": 1,
                "r": 1
            },
            "emit": {
                "b": 0,
                "g": 0,
                "r": 0
            },
            "layers": [{
                    "alpha": 1,
                    "blendMode": 0,
                    "mapInput": 0,
                    "mapTo": 1,
                    "offsetx": 0,
                    "offsety": 0,
                    "rot": 0,
                    "scalex": 1,
                    "scaley": 1,
                    "src": "checker.jpg"
                }
            ],
            "reflect": 0.8,
            "shadeless": false,
            "shadow": true,
            "shininess": 15,
            "specularColor": {
                "b": 0.577350269189626,
                "g": 0.577350269189626,
                "r": 0.577350269189626
            },
            "specularLevel": 1
        },
        "owner": "Rob",
        "transform": [1, 0, -7.575992277963906e-9, 0, 0, 1, 0, 0, 7.575992277963906e-9, 0, 1, 0, 35.75, -71.5, 24.25, 1],
        "type": "Primitive",
        "visible": false,
        "width": 2.5
    },
    "random": {
        "c": 1,
        "s0": 0.134394315304235,
        "s1": 0.921757695497945,
        "s2": 0.0452698364388198
    },
    "sequence": 0,
    "source": "vwf/model/threejs/box.js",
    "type": "subDriver/threejs"
}