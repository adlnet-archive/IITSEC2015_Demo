{
	"extends": "box2.vwf",
	"source": "vwf/model/threejs/box.js",
	"type": "subDriver/threejs",
	"sequence": 0,
	"random": {
		"s0": 0.11761978664435446,
		"s1": 0.727830869378522,
		"s2": 0.1694343239068985,
		"c": 1192018
	},
	"properties": {
		"___physics_activation_state": 1,
		"___physics_deactivation_time": 0.05000000074505806,
		"___physics_velocity_linear": [
			0.00044184125727042556,
			-0.0068492526188492775,
			0.12533560395240784
		],
		"___physics_velocity_angular": [
			-0.04453953728079796,
			0.0876585841178894,
			-0.00048192322719842196
		],
		"DisplayName": "SeaHawk",
		"EditorData": {
			"_controllingCamera": {
				"displayname": "Controlling Camera",
				"property": "controllingCamera",
				"type": "nodeid"
			}
		},
		"Missiles": 8,
		"___physics_angular_velocity": [
			0,
			0,
			0
		],
		"___physics_constant_force": [
			0,
			0,
			9.8
		],
		"___physics_damping": 0.7,
		"___physics_enabled": true,
		"___physics_linear_velocity": [
			0,
			0,
			0
		],
		"___sourceAssetTimestamp": "Mon Nov 09 2015 15:56:21 GMT-0500 (Eastern Standard Time)",
		"_length": 2.98,
		"controllingCamera": "SandboxCamera-vwf-N79164421",
		"counter": 2063.24999999994,
		"elevation": 25,
		"height": 2.53,
		"hsegs": 1,
		"isHit": false,
		"keysDown": [],
		"materialDef": {
			"alpha": 1,
			"ambient": {
				"b": 1,
				"g": 1,
				"r": 1
			},
			"blendMode": 1,
			"color": {
				"a": 1,
				"b": 1,
				"g": 1,
				"r": 1
			},
			"depthtest": true,
			"depthwrite": true,
			"emit": {
				"b": 0,
				"g": 0,
				"r": 0
			},
			"fog": true,
			"layers": [
				{
					"alpha": 1,
					"blendMode": 0,
					"mapInput": 0,
					"mapTo": 1,
					"offsetx": 0,
					"offsety": 0,
					"rot": 0,
					"scalex": 1,
					"scaley": 1,
					"src": "checker.jpg"
				}
			],
			"metal": false,
			"reflect": 0.8,
			"shadeless": false,
			"shading": true,
			"shadow": true,
			"shininess": 15,
			"side": 0,
			"specularColor": {
				"b": 0.577350269189626,
				"g": 0.577350269189626,
				"r": 0.577350269189626
			},
			"specularLevel": 1,
			"type": "phong",
			"vertexColors": false,
			"wireframe": false
		},
		"missileDef": {
			"continues": "/sas/assets/73e8a4a3",
			"properties": {
				"fired": true,
				"transform": [
					0.931571364402771,
					0.357651203870773,
					0.016260351985693,
					0,
					0.0510182715952396,
					-0.0876574739813805,
					-0.99483448266983,
					0,
					-0.354730248451233,
					0.928518354892731,
					-0.10019389539957,
					0,
					-46.1648445129395,
					3.0893976688385,
					-0.936574399471283,
					1
				]
			}
		},
		"owner": "ADLteam",
		"smokeDef": {
			"continues": "/sas/assets/aeb3d1dd",
			"properties": {
				"targetEntity": "-sas-assets-73e8a4a3-Ne73d4bf3",
				"transform": [
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					1
				]
			}
		},
		"sourceAssetId": "7582c61c",
		"transform": [
			0.929704487323761,
			0.35693448781967163,
			0.016228625550866127,
			0,
			-0.35795506834983826,
			0.9326468706130981,
			-0.006246628705412149,
			0,
			-0.017452405765652657,
			-0.0000016084766230051173,
			0.9998477101325989,
			0,
			0.75,
			1,
			4.25,
			1
		],
		"type": "Primitive",
		"visible": false,
		"weaponsTarget": "ocean-ocean-vwf-N4bab7165",
		"width": 8.49,
		"worldPosition": [
			0.75,
			1,
			4.25
		],
		"": null,
		"maxHeight": 500,
		"minHeight": 25,
		"worldTransform": [
			0.929704487323761,
			0.35693448781967163,
			0.016228625550866127,
			0,
			-0.35795506834983826,
			0.9326468706130981,
			-0.006246628705412149,
			0,
			-0.017452405765652657,
			-0.0000016084766230051173,
			0.9998477101325989,
			0,
			0.75,
			1,
			4.25,
			1
		],
		"userControlCounter": 0,
		"activeState": "idle",
		"states": {
			"engage": {
				"transitionFunc": "inEngage",
				"updateFunc": "engage"
			},
			"hit": {},
			"idle": {
				"updateFunc": null
			},
			"reload": {
				"transitionFunc": "inReload",
				"updateFunc": "reload"
			},
			"scram": {
				"updateFunc": "scram"
			},
			"warn": {
				"transitionFunc": "inWarn",
				"updateFunc": "warn"
			}
		},
		"targetID": "box2-vwf-N305bab2d",
		"fireCounter": 0,
		"scramPos": [
			500,
			500,
			250
		]
	},
	"methods": {
		"keyIsDown": {
			"body": "if (this.keysDown.indexOf(char) == -1) return false;\n    return true;",
			"parameters": [
				"char"
			]
		},
		"ready": {
			"body": "this.Scene.unbind(\"keyDown\",this.__kd);\n            this.Scene.unbind(\"keyUp\",this.__ku);\n            \n            var self = this;\n            this.__ku = function(e,d)\n            {\n                self._ku(e,d);\n            }\n            \n            this.__kd = function(e,d)\n            {\n                self._kd(e,d);\n            }\n            \n            this.Scene.bind(\"keyDown\",this.__kd);\n            this.Scene.bind(\"keyUp\",this.__ku);",
			"parameters": []
		},
		"launchMissile": {
			"body": "if (this.Missiles === 0) return;\n    this.Missiles--;\n    var def = _DataManager.getCleanNodePrototype(this.missileDef);\n\n    if (this.random() > .5)\n        var pos = this.children_by_name.Launcher1.worldTransform.slice();\n    else\n        pos = this.children_by_name.Launcher2.worldTransform.slice();\n\n    pos[14] += 0;\n    def.properties.transform = pos;\n    // def.properties.___physics_velocity_linear = this.physicsAPI.getLinearVelocity();\n    def.properties.fired = true;\n    if (this.weaponsTarget)\n    {\n        def.properties.target_data = {\n            id: this.weaponsTarget\n        };\n    }\n\n    var now = performance.now();\n    // console.profile(\"launch\");\n\n    var sender = this.Scene.children_by_name.xAPISender;\n    var context = {\n        // firePosition: pos,\n        // missileNum: maximum num of missile - this.Missiles,\n        target: this.weaponsTarget,\n    };\n    if (sender)\n    {\n        sender.xAPISend(\"fired\", \"SeahawkMissile\", this.DisplayName, null);\n    }\n    var smokeDef = this.smokeDef;\n    console.log(def.properties.target_data);\n    vwf.createChild(vwf.application(), GUID(), def, null, function(id)\n    {\n        smokeDef.properties.targetEntity = id;\n        vwf.createChild(vwf.application(), GUID(), _DataManager.getCleanNodePrototype(smokeDef), null, function()\n        {\n            console.log(performance.now() - now);\n        });\n    });",
			"parameters": []
		},
		"": {
			"parameters": "console.log(\"got here\");"
		},
		"_ku": {
			"body": "if (!this.verifyCamera()) return;\n    this.userControlCounter = 200;\n    if (this.keysDown.indexOf(e.key.key) != -1)\n    {\n        this.keysDown.splice(this.keysDown.indexOf(e.key.key), 1);\n    }\n\n    if (e.key.key == 'space')\n    {\n        this.launchMissile();\n    }",
			"parameters": [
				"e",
				"d"
			]
		},
		"doUserTargeting": {
			"body": "/********************************************\n     * Update weapons target\n     *******************************************/\n\n    var worldToCamera = new THREE.Matrix4().fromArray(this.children_by_name.art.children_by_name.UH60Pilot.worldTransform);\n    worldToCamera.getInverse(worldToCamera);\n    var target = {\n        range: 4,\n        id: ''\n    };\n\n    // get location of all scene children in view space\n    for (i = 0; i < this.Scene.children.length; i++)\n    {\n        var node = this.Scene.children[i];\n        if (node === this) continue;\n\n        var targetCoord = new THREE.Vector4().fromArray(node.transformAPI.getWorldPosition().concat([1]));\n        targetCoord.applyMatrix4(worldToCamera);\n\n        // calculate distance to center iff target is in front of the camera\n        if (targetCoord.y > 0)\n        {\n            var range = Math.sqrt(targetCoord.x * targetCoord.x + targetCoord.z * targetCoord.z);\n            if (range < target.range)\n            {\n                target.id = node.id;\n                target.range = range;\n            }\n        }\n    }\n\n    this.weaponsTarget = target.id;\n\n    if (this.weaponsTarget)\n        this.children_by_name.art.children_by_name.UH60Pilot.children_by_name.reticle1.border_color = [1, 0, 0];\n    else\n        this.children_by_name.art.children_by_name.UH60Pilot.children_by_name.reticle1.border_color = [0.5, 0.5, 0.5];",
			"parameters": []
		},
		"_kd": {
			"body": "if (!this.verifyCamera()) return;\n    this.userControlCounter = 200;\n   \n    if (this.keysDown.indexOf(e.key.key) == -1)\n    {\n        this.keysDown.push(e.key.key);\n    }",
			"parameters": [
				"e",
				"d"
			]
		},
		"doUserInput": {
			"body": "var mass = 20 * this.physicsAPI.getMass();\n    var topKey = this.keysDown[this.keysDown.length - 1];\n    if (topKey)\n    {\n\n        var thispos = this.transformAPI.getPosition();\n        if (this.keyIsDown('W'))\n        {\n            var force = this.transformAPI.localToGlobalRotation(0, -mass, 0);\n            this.physicsAPI.addForceAtCenter(force);\n        }\n        if (this.keyIsDown('S'))\n        {\n            var force = this.transformAPI.localToGlobalRotation(0, mass, 0);\n            this.physicsAPI.addForceAtCenter(force);\n        }\n        if (this.keyIsDown('Q'))\n        {\n            this.physicsAPI.addForceAtCenter(0, 0, -mass)\n            this.elevation = this.transformAPI.getPosition()[2];\n        }\n        if (this.keyIsDown('E'))\n        {\n            this.physicsAPI.addForceAtCenter(0, 0, mass)\n            this.elevation = this.transformAPI.getPosition()[2];\n        }\n        if (this.keyIsDown('A'))\n        {\n            this.physicsAPI.addTorque(0, 0, mass / 4, this.transformAPI.COORDINATES.LOCAL);\n        }\n        if (this.keyIsDown('D'))\n        {\n            this.physicsAPI.addTorque(0, 0, -mass / 4, this.transformAPI.COORDINATES.LOCAL);\n        }\n\n    }",
			"parameters": []
		},
		"doHover": {
			"body": "if (this.isHit)\n    {\n        this.elevation = 20;\n        this.children_by_name.art.children_by_name.Mrotor.children_by_name.rotator1.Amount *= .8;\n       \n       /* var sender = this.Scene.children_by_name.xAPISender;\n        if (sender)\n        {\n            sender.xAPISend(\"is-damaged\", this.DisplayName, \"Seahawk\", null);\n        } */\n        return;\n    }\n    if (!this.isHit)\n    {\n        var elTemp = this.transformAPI.getPosition()[2];\n        if (elTemp < this.minHeight)\n            this.elevation = this.minHeight;\n        else if (elTemp > this.maxHeight)\n            this.elevation = this.maxHeight;\n        else this.elevation = elTemp;\n    }\n    var waterDepth = this.elevation;\n    var hullThick = 0;\n    var depthFloor = waterDepth + hullThick;\n    // The tick function is called 20 times every second.\n    // Write code here to animate over time\n    this.physicsAPI.addForceAtCenter(0, 0, 9.8);\n    this.physicsAPI.wake();\n    var mass = this.physicsAPI.getMass();\n    var corners = [\n        [this._length / 2, this.width / 2, 0],\n        [this._length / 2, -this.width / 2, 0],\n        [-this._length / 2, this.width / 2, 0],\n        [-this._length / 2, -this.width / 2, 0],\n    ];\n\n    this.counter++;\n    var rocking = -mass / 10;\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.sin(this.counter / 30) * this._length, Math.cos(this.counter / 15) * this.width, 0]);\n    this.physicsAPI.addForceOffset([0, 0, rocking], [Math.cos(this.counter / 10) * this._length, Math.sin(this.counter / 10) * this.width, 0]);\n\n    for (var i = 0; i < corners.length; i++)\n    {\n        var corner = corners[i];\n        var worldCorner = this.transformAPI.localToGlobal(corner);\n        var depth = depthFloor - worldCorner[2];\n        depth = Math.min(depth, 5);\n        if (depth > 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, depth * mass * 9.8 / 3], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n            //    vel[0] *= .6;\n            // vel[1] *= .6;\n            vel[2] *= 1 - depth / 50;\n\n            torque[0] *= 1 - depth / 100;\n            torque[1] *= 1 - depth / 100;\n            torque[2] *= 1 - depth / 100;\n            this.physicsAPI.setAngularVelocity(torque);\n            this.physicsAPI.setLinearVelocity(vel);\n        }\n        //  if (depth < 0)\n        {\n\n            this.physicsAPI.addForceOffset([0, 0, -mass * 9.8 / 4], Vec3.subtract(worldCorner, this.transformAPI.getPosition(), []));\n            var vel = this.physicsAPI.getLinearVelocity();\n            var torque = this.physicsAPI.getAngularVelocity();\n        }\n\n    }\n\n    var depth = depthFloor - this.transformAPI.getPosition()[2]\n    depth = Math.min(depth, 5);\n    if (depth > 0)\n    {\n\n        var vel = this.physicsAPI.getLinearVelocity();\n        vel = this.transformAPI.globalToLocalRotation(vel);\n        vel[0] *= 1.0 - depth / 100;\n        vel[1] *= 1.0 - depth / 30;\n        vel = this.transformAPI.localToGlobalRotation(vel);\n        this.physicsAPI.setLinearVelocity(vel);\n\n    }\n\n    this.counter += .05;\n    var mass = this.physicsAPI.getMass() * 10;\n    var amt1 = Math.cos(this.counter) / 10;\n    var amt2 = Math.cos(this.counter / 3) / 10;\n    var amt3 = Math.cos(this.counter / 1) / 3;\n    this.physicsAPI.addForceAtCenter([amt1, amt2, amt3]);",
			"parameters": []
		},
		"doFlightModel": {
			"body": "var t = this.physicsAPI.getLinearVelocity();\n    t = this.transformAPI.globalToLocalRotation(t)\n    var z = t[2];\n    t[2] = 0;\n    var len = MATH.lengthVec3(t) * Math.sign(t[1]);\n    t[0] = 0;\n    t[1] = len;\n    t[2] = z;\n    t = this.transformAPI.localToGlobalRotation(t);\n    this.physicsAPI.setLinearVelocity(t);",
			"parameters": []
		},
		"doAIBehaviors": {
			"body": "var state = this.states[this.activeState];\n    \n    if (state)\n    {\n        if (this[state.updateFunc])\n            this[state.updateFunc]();\n    }",
			"parameters": []
		},
		"inWarn": {
			"body": "this.targetID = this.getClosestHostile();",
			"parameters": []
		},
		"warn": {
			"body": "this.seekTarget();\n    if(this.distToTarget() < 200)\n    {\n        //playWarnSound\n        this.activateState(\"idle\");\n    }",
			"parameters": []
		},
		"inEngage": {
			"body": "this.targetID = this.getClosestHostile();",
			"parameters": []
		},
		"distToTarget": {
			"body": "if (!this.targetID)\n        return 0\n    var target = this.Scene.findNodeByID(this.targetID);\n    if (!target)\n        return 0;\n        \n       \n       \n            var pos = this.transformAPI.getWorldPosition();\n            var hostilePos = target.transformAPI.getWorldPosition();\n            return Vec3.distance(pos, hostilePos);",
			"parameters": []
		},
		"reload": {
			"body": "this.fireCounter--;\n    if (this.fireCounter < 0)\n    {\n        this.activateState('engage');\n    }",
			"parameters": []
		},
		"activateState": {
			"body": "//console.log(\"activateState\");\n    var state = this.states[statename];\n\n    if (state.transitionFunc)\n        this[state.transitionFunc](this.activeState);\n    this.activeState = statename;\n    for (var i in state.properties)\n    {\n        this[i] = state.properties[i];\n    }",
			"parameters": [
				"statename"
			]
		},
		"inReload": {
			"body": "this.fireCounter = 200;",
			"parameters": []
		},
		"engage": {
			"body": "this.seekTarget();\n    if (this.distToTarget() < 200)\n    {\n        this.weaponsTarget = this.targetID;\n        this.launchMissile();\n        if(this.Missiles === 0)\n            this.activateState(\"scram\");\n        else\n            this.activateState(\"reload\");\n    }",
			"parameters": []
		},
		"scram": {
			"body": "this.seekTarget(this.scramPos);",
			"parameters": []
		},
		"getClosestHostile": {
			"body": "var dist = Infinity;\n    var hostile = null;\n    for (var i = 0; i < this.Scene.children.length; i++)\n    {\n        var node = this.Scene.children[i];\n        if (node.hostile && node.state !== \"defeated\")\n        {\n            var pos = this.transformAPI.getWorldPosition();\n            var hostilePos = node.transformAPI.getWorldPosition();\n            if (Vec3.distance(pos, hostilePos) < dist)\n            {\n                dist = Vec3.distance(pos, hostilePos);\n                hostile = node.id;\n            }\n        }\n    }\n    return hostile;",
			"parameters": []
		},
		"userControlled": {
			"body": "var thisCam = this.children_by_name.art.children_by_name.UH60Pilot.id;\n\n    return this.userControlCounter > 0 && this.Scene.clientAPI.getClientForCamera(thisCam).length > 0;",
			"parameters": []
		},
		"hit": {
			"body": "this.children_by_name.art.materialDef.layers[0].src = \"/sas/assets/d2f274ee\";\n    this.children_by_name.smoke.visible = true;\n    this.isHit = true;\n    this.___physics_constant_force[2] = 0;\n    this.___physics_damping = .1;\n    this.activateState(\"hit\");",
			"parameters": []
		},
		"tick": {
			"body": "// The tick function is called 20 times every second.\n    // Write code here to animate over time\n\n    this.audioAPI.playSound(\"/sas/assets/dc81768a\", true, 300, false);\n    this.userControlCounter--;\n    this.doHover();\n    if (this.userControlled())\n    {\n        this.doUserInput();\n        this.doUserTargeting();\n    }\n    else\n    {\n        this.doAIBehaviors();\n    }\n\n    this.doFlightModel();",
			"parameters": []
		},
		"TAOCommand": {
			"body": "if( args[0] == \"Seahawk Warning\")\n   {\n        this.activateState(\"warn\");   \n   }\n    if( args[0] == \"Seahawk Engage\")\n   {\n        this.activateState(\"engage\");   \n   }\n   if( args[0] == \"Seahawk Disengage\")\n   {\n        this.activateState(\"scram\");   \n   }",
			"parameters": [
				"args"
			]
		},
		"seekTarget": {
			"body": "if (!target)\n    {\n        var node = this.Scene.findNodeByID(this.targetID);\n        if (!node)\n            return;\n        target = node.transformAPI.getWorldPosition();\n    }\n    var mass = 20 * this.physicsAPI.getMass();\n    target = this.transformAPI.globalToLocal(target);\n    \n    if(Vec3.distance(target,this.transformAPI.getWorldPosition()) < 20)\n        return;\n    if (target[1] < 0)\n    {\n        var force = this.transformAPI.localToGlobalRotation(0, -mass, 0);\n        this.physicsAPI.addForceAtCenter(force);\n    }\n    if (target[0] > 0)\n    {\n        this.physicsAPI.addTorque(0, 0, mass / 4, this.transformAPI.COORDINATES.LOCAL);\n    }\n    else\n    {\n        this.physicsAPI.addTorque(0, 0, -mass / 4, this.transformAPI.COORDINATES.LOCAL);\n    }\n    if (target[2] > -100)\n    {\n        this.physicsAPI.addForceAtCenter(0, 0, mass)\n        this.elevation = this.transformAPI.getPosition()[2];\n    }\n    else\n    {\n        this.physicsAPI.addForceAtCenter(0, 0, -mass)\n        this.elevation = this.transformAPI.getPosition()[2];\n    }",
			"parameters": [
				"target"
			]
		},
		"verifyCamera": {
			"body": "var cam = this.children_by_name.art.children_by_name.UH60Pilot.id;\n    var camt = this.Scene.clientAPI.getCameraForClient(vwf.client());\n    if (!camt || camt.id != cam) return false;\n    return true;",
			"parameters": []
		}
	},
	"children": {
		"Ncb704c67": {
			"extends": "box2.vwf",
			"source": "vwf/model/threejs/box.js",
			"type": "subDriver/threejs",
			"sequence": 0,
			"random": {
				"s0": 0.547852494521067,
				"s1": 0.42743748635985,
				"s2": 0.329113340005279,
				"c": 1
			},
			"properties": {
				"___physics_activation_state": 1,
				"___physics_deactivation_time": 0,
				"___physics_velocity_linear": [
					0,
					0,
					0
				],
				"___physics_velocity_angular": [
					0,
					0,
					0
				],
				"DisplayName": "Launcher2",
				"___assetServerOriginalID": "Ncb704c67",
				"_length": 0.75,
				"height": 0.66,
				"materialDef": {
					"alpha": 1,
					"ambient": {
						"b": 1,
						"g": 1,
						"r": 1
					},
					"blendMode": 1,
					"color": {
						"a": 1,
						"b": 1,
						"g": 1,
						"r": 1
					},
					"depthtest": true,
					"depthwrite": true,
					"emit": {
						"b": 0,
						"g": 0,
						"r": 0
					},
					"fog": true,
					"layers": [
						{
							"alpha": 1,
							"blendMode": 0,
							"mapInput": 0,
							"mapTo": 1,
							"offsetx": 0,
							"offsety": 0,
							"rot": 0,
							"scalex": 1,
							"scaley": 1,
							"src": "checker.jpg"
						}
					],
					"metal": false,
					"reflect": 0.8,
					"shadeless": false,
					"shading": true,
					"shadow": true,
					"shininess": 15,
					"side": 0,
					"specularColor": {
						"b": 0.577350269189626,
						"g": 0.577350269189626,
						"r": 0.577350269189626
					},
					"specularLevel": 1,
					"type": "phong",
					"vertexColors": false,
					"wireframe": false
				},
				"owner": "ADLteam",
				"transform": [
					1,
					0,
					0,
					0,
					0,
					-0.09398699551820755,
					-0.9955734014511108,
					0,
					0,
					0.9955734014511108,
					-0.09398699551820755,
					0,
					-1.7000000476837158,
					-2.246000051498413,
					-0.9619998931884766,
					1
				],
				"type": "Primitive",
				"visible": false,
				"worldTransform": [
					0.929704487323761,
					0.35693448781967163,
					0.016228625550866127,
					0,
					0.05101827159523964,
					-0.08765507489442825,
					-0.9948346614837646,
					0,
					-0.3547302484512329,
					0.9285185933113098,
					-0.10019166022539139,
					0,
					-0.009741358458995819,
					-1.7015119791030884,
					3.274587869644165,
					1
				]
			}
		},
		"N969ed85": {
			"extends": "SandboxParticleSystem.vwf",
			"sequence": 0,
			"random": {
				"s0": 0.380000642035156,
				"s1": 0.368383316323161,
				"s2": 0.00437599862925708,
				"c": 1
			},
			"properties": {
				"DisplayName": "smoke",
				"___assetServerOriginalID": "N969ed85",
				"alphaTest": 0,
				"colorRange": [
					0,
					0,
					0,
					0
				],
				"depthTest": false,
				"emitterPosition": [
					0,
					0,
					0
				],
				"emitterSize": [
					1,
					1,
					1
				],
				"emitterType": "sphere",
				"endColor": [
					0,
					0,
					0,
					0
				],
				"endSize": 0.99,
				"image": "../vwfDataManager.svc/texture?UID=smoke.png",
				"maxAcceleration": [
					0,
					0,
					-1
				],
				"maxLifeTime": 1,
				"maxOrientation": 13.5,
				"maxRate": 0.75,
				"maxVelocity": [
					1,
					1,
					5
				],
				"minAcceleration": [
					0,
					0,
					-1
				],
				"minLifeTime": 1,
				"minOrientation": -18.4,
				"minSpin": 20,
				"minVelocity": [
					-1,
					-1,
					3
				],
				"owner": "ADLteam",
				"particleCount": 200,
				"sizeRange": 0.02,
				"solver": "AnalyticShader",
				"startColor": [
					0.4,
					0.4,
					0.4,
					1
				],
				"startSize": 0.94,
				"transform": [
					0.930568039417267,
					-0.365895479917526,
					-0.0127951297909021,
					0,
					0.365820020437241,
					0.93065220117569,
					-0.00789403822273016,
					0,
					0.0147962002083659,
					0.0026652398519218,
					0.999886989593506,
					0,
					-0.217235177755356,
					-1.25345528125763,
					0.506611049175262,
					1
				],
				"type": "ParticleSystem",
				"velocityMode": "cartesian",
				"visible": false
			}
		},
		"N9db3f32f": {
			"extends": "box2.vwf",
			"source": "vwf/model/threejs/box.js",
			"type": "subDriver/threejs",
			"sequence": 0,
			"random": {
				"s0": 0.547852494521067,
				"s1": 0.42743748635985,
				"s2": 0.329113340005279,
				"c": 1
			},
			"properties": {
				"___physics_activation_state": 1,
				"___physics_deactivation_time": 0,
				"___physics_velocity_linear": [
					0,
					0,
					0
				],
				"___physics_velocity_angular": [
					0,
					0,
					0
				],
				"DisplayName": "Launcher1",
				"___assetServerOriginalID": "N9db3f32f",
				"_length": 0.75,
				"height": 0.66,
				"materialDef": {
					"alpha": 1,
					"ambient": {
						"b": 1,
						"g": 1,
						"r": 1
					},
					"blendMode": 1,
					"color": {
						"a": 1,
						"b": 1,
						"g": 1,
						"r": 1
					},
					"depthtest": true,
					"depthwrite": true,
					"emit": {
						"b": 0,
						"g": 0,
						"r": 0
					},
					"fog": true,
					"layers": [
						{
							"alpha": 1,
							"blendMode": 0,
							"mapInput": 0,
							"mapTo": 1,
							"offsetx": 0,
							"offsety": 0,
							"rot": 0,
							"scalex": 1,
							"scaley": 1,
							"src": "checker.jpg"
						}
					],
					"metal": false,
					"reflect": 0.8,
					"shadeless": false,
					"shading": true,
					"shadow": true,
					"shininess": 15,
					"side": 0,
					"specularColor": {
						"b": 0.577350269189626,
						"g": 0.577350269189626,
						"r": 0.577350269189626
					},
					"specularLevel": 1,
					"type": "phong",
					"vertexColors": false,
					"wireframe": false
				},
				"owner": "ADLteam",
				"transform": [
					1,
					0,
					0,
					0,
					0,
					-0.07477577775716782,
					-0.9972004294395447,
					0,
					0,
					0.9972004294395447,
					-0.07477577775716782,
					0,
					1.4050002098083496,
					-2.246999979019165,
					-0.9619998931884766,
					1
				],
				"type": "Primitive",
				"visible": false,
				"worldTransform": [
					0.929704487323761,
					0.35693448781967163,
					0.016228625550866127,
					0,
					0.04416991397738457,
					-0.06973779201507568,
					-0.996581494808197,
					0,
					-0.3556479215621948,
					0.9300360083580017,
					-0.08099353313446045,
					0,
					2.8773491382598877,
					-0.5941629409790039,
					3.324984073638916,
					1
				]
			}
		},
		"Nf79a9db2": {
			"extends": "asset.vwf",
			"source": "http://54.175.234.78:3030/assets/5bc62bd9",
			"type": "subDriver/threejs/asset/vnd.collada+xml",
			"sequence": 0,
			"random": {
				"s0": 0.00934545020572841,
				"s1": 0.598593043396249,
				"s2": 0.108742361655459,
				"c": 1
			},
			"properties": {
				"___physics_activation_state": 1,
				"___physics_deactivation_time": 0,
				"___physics_velocity_linear": [
					0,
					0,
					0
				],
				"___physics_velocity_angular": [
					0,
					0,
					0
				],
				"materialDef": {
					"alpha": 1,
					"ambient": {
						"b": 0.805194805194805,
						"g": 0.805194805194805,
						"r": 0.805194805194805
					},
					"blendMode": 1,
					"color": {
						"a": 1,
						"b": 0.805194805194805,
						"g": 0.805194805194805,
						"r": 0.805194805194805
					},
					"depthtest": true,
					"depthwrite": true,
					"emit": {
						"b": 0,
						"g": 0,
						"r": 0
					},
					"fog": true,
					"layers": [
						{
							"alpha": 1,
							"mapInput": 0,
							"mapTo": 1,
							"offsetx": 0,
							"offsety": 0,
							"scalex": 1,
							"scaley": 1,
							"src": "/sas/assets/b29f970c"
						}
					],
					"metal": false,
					"reflect": 0.01,
					"shading": true,
					"shininess": 0.020002,
					"side": 0,
					"specularColor": {
						"b": 0.898,
						"g": 0.898,
						"r": 0.898
					},
					"specularLevel": 1,
					"type": "phong",
					"vertexColors": false,
					"wireframe": false
				},
				"DisplayName": "art",
				"___assetServerOriginalID": "Nf79a9db2",
				"___physics_collision_height": 0.8,
				"___physics_collision_length": 3,
				"___physics_collision_type": "2",
				"___physics_collision_width": 7.6,
				"___physics_enabled": false,
				"___sourceAssetTimestamp": "Tue Oct 13 2015 15:10:30 GMT-0400 (Eastern Daylight Time)",
				"counter": 98.1999999999966,
				"owner": "ADLteam",
				"transform": [
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					-0.08899915218353271,
					-1.740545392036438,
					-1.4672541618347168,
					1
				]
			},
			"methods": {
				"tick": {
					"body": "// The tick function is called 20 times every second.\n    // Write code here to animate over time",
					"parameters": []
				}
			},
			"children": {
				"N6800ef37": {
					"extends": "asset.vwf",
					"source": "RotorBack",
					"type": "link_existing/threejs",
					"sequence": 0,
					"random": {
						"s0": 0.45686529786326,
						"s1": 0.470268527045846,
						"s2": 0.272260453319177,
						"c": 1
					},
					"properties": {
						"___physics_activation_state": 1,
						"___physics_deactivation_time": 0,
						"___physics_velocity_linear": [
							0,
							0,
							0
						],
						"___physics_velocity_angular": [
							0,
							0,
							0
						],
						"DisplayName": "RotorBack",
						"___assetServerOriginalID": "N6800ef37",
						"transform": [
							0.00800000037997961,
							0,
							0,
							0,
							0,
							0.007000000216066837,
							0,
							0,
							0,
							0,
							0.008999999612569809,
							0,
							-0.210999995470047,
							7.117000102996826,
							2.552000045776367,
							1
						],
						"type": "3DR Object"
					},
					"methods": {
						"tick": {
							"body": "// The tick function is called 20 times every second.\n    // Write code here to animate over time\n    //var parent_y = this.parent.transformAPI.localToGlobalRotation([1, 0, 0]);\n    //parent_y = this.transformAPI.globalToLocalRotation(parent_y);\n    //this.transformAPI.rotateAroundAxis(80, parent_y, this.transformAPI.COORDINATES.LOCAL);\n   // this.transformAPI.rotateAroundAxis(80, [1, 0, 0], this.transformAPI.COORDINATES.LOCAL);",
							"parameters": []
						}
					}
				},
				"N912c6b53": {
					"extends": "SandboxCamera.vwf",
					"source": "vwf/model/threejs/camera.js",
					"type": "subDriver/threejs",
					"sequence": 0,
					"random": {
						"s0": 0.564238151069731,
						"s1": 0.704742263769731,
						"s2": 0.708320440026,
						"c": 1
					},
					"properties": {
						"DisplayName": "UH60Pilot",
						"___assetServerOriginalID": "N912c6b53",
						"far": 10000,
						"fov": 70,
						"lastPos": [
							0.213684210526316,
							0.312938816449348
						],
						"near": 0.08,
						"owner": "Rob",
						"pointerState": "none",
						"transform": [
							-0.9976319074630737,
							-0.06877858191728592,
							-0.0008389707654714584,
							0,
							0.06855732202529907,
							-0.9932834506034851,
							-0.09321175515651703,
							0,
							0.005577120929956436,
							-0.09304841607809067,
							0.9956457018852234,
							0,
							0.4239990711212158,
							-1.6844545602798462,
							1.4272541999816895,
							1
						],
						"worldTransform": [
							-0.9028685688972473,
							-0.42023536562919617,
							-0.01659940369427204,
							0,
							0.4209156632423401,
							-0.9019120931625366,
							-0.08588029444217682,
							0,
							0.02111581340432167,
							-0.08479224890470505,
							0.9961658120155334,
							0,
							2.288145065307617,
							-2.074742317199707,
							4.236837387084961,
							1
						]
					},
					"methods": {
						"ready": {
							"body": "//This function was created for you by the system. \n    //The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects\n\n    this.Scene.unbind('pointerMove', this._mouseMoved);\n    this.Scene.unbind('pointerDown', this._mouseDown);\n    this.Scene.unbind('pointerUp', this._mouseup);\n    var self = this;\n    this._mouseMoved = function(eventData)\n    {\n        if (!self.Scene.clientAPI.getCameraForClient(vwf.client()) || self.Scene.clientAPI.getCameraForClient(vwf.client()).DisplayName != self.DisplayName) return;\n        if (self.pointerState == 'down')\n        {\n            console.log(eventData);\n            self.parent.parent.userControlCounter = 200;\n            var relX = self.lastPos[0] - eventData.position[0];\n            var relY = self.lastPos[1] - eventData.position[1];\n            self.lastPos = [eventData.position[0], eventData.position[1]];\n            console.log(relX, relY);\n\n            self.transformAPI.rotate(relY * 100, 0, 0, self.transformAPI.COORDINATES.LOCAL);\n            self.transformAPI.rotate(0, 0, relX * 100, self.transformAPI.COORDINATES.GLOBAL);\n\n        }\n    }\n    this._mouseDown = function(eventData)\n    {\n        if (!self.Scene.clientAPI.getCameraForClient(vwf.client()) || self.Scene.clientAPI.getCameraForClient(vwf.client()).DisplayName != self.DisplayName) return;\n        if (eventData.button == 'left')\n        {\n            self.pointerState = \"down\";\n            console.log('pointer is down');\n            self.lastPos = [eventData.position[0], eventData.position[1]];\n        }\n    }\n    this._mouseup = function(eventData)\n    {\n        if (!self.Scene.clientAPI.getCameraForClient(vwf.client()) || self.Scene.clientAPI.getCameraForClient(vwf.client()).DisplayName != self.DisplayName) return;\n        self.pointerState = \"none\";\n    }\n\n    this.Scene.bind('pointerMove', this._mouseMoved);\n    this.Scene.bind('pointerDown', this._mouseDown);\n    this.Scene.bind('pointerUp', this._mouseup);",
							"parameters": []
						}
					},
					"children": {
						"Na904c512": {
							"extends": "http://vwf.example.com/panel.vwf",
							"sequence": 0,
							"random": {
								"s0": 0.652858031913638,
								"s1": 0.224981724051759,
								"s2": 0.616599520435557,
								"c": 1
							},
							"properties": {
								"DisplayName": "reticle1",
								"___assetServerOriginalID": "Na904c512",
								"background_color": [
									0.533333333333333,
									0.533333333333333,
									0.533333333333333
								],
								"background_visible": false,
								"border_color": [
									1,
									0,
									0
								],
								"border_radius": 25,
								"border_style": "dashed",
								"border_width": 4,
								"height": 75,
								"left": 0,
								"owner": "ADLteam",
								"style": {
									"transform": "translate(-50%,-50%)"
								},
								"top": 0,
								"transform": [
									1,
									0,
									0,
									0,
									0,
									1,
									0,
									0,
									0,
									0,
									1,
									0,
									50,
									50,
									0,
									1
								],
								"visible": true,
								"visibleToAncestor": true,
								"width": 75
							},
							"children": {
								"Ncfe793d7": {
									"extends": "http://vwf.example.com/panel.vwf",
									"sequence": 0,
									"random": {
										"s0": 0.0157254466321319,
										"s1": 0.380840231664479,
										"s2": 0.689161838730797,
										"c": 1
									},
									"properties": {
										"DisplayName": "reticle2",
										"___assetServerOriginalID": "Ncfe793d7",
										"background_color": [
											1,
											0,
											0
										],
										"background_visible": false,
										"border_color": [
											0.301960784313725,
											0.301960784313725,
											0.301960784313725
										],
										"border_radius": 50,
										"border_style": "solid",
										"height": 25,
										"left": 0,
										"owner": "ADLteam",
										"style": {
											"transform": "translate(-50%,-50%)"
										},
										"top": 0,
										"transform": [
											1,
											0,
											0,
											0,
											0,
											1,
											0,
											0,
											0,
											0,
											1,
											0,
											50,
											50,
											0,
											1
										],
										"visible": true,
										"visibleToAncestor": true,
										"width": 25
									}
								}
							}
						}
					}
				},
				"Nf03e7073": {
					"extends": "asset.vwf",
					"source": "Mrotor",
					"type": "link_existing/threejs",
					"sequence": 0,
					"random": {
						"s0": 0.19471717858687,
						"s1": 0.569339766399935,
						"s2": 0.901306878542528,
						"c": 1
					},
					"properties": {
						"___physics_activation_state": 1,
						"___physics_deactivation_time": 0,
						"___physics_velocity_linear": [
							0,
							0,
							0
						],
						"___physics_velocity_angular": [
							0,
							0,
							0
						],
						"DisplayName": "Mrotor",
						"___assetServerOriginalID": "Nf03e7073",
						"materialDef": {
							"alpha": 1,
							"ambient": {
								"b": 0.792207792207792,
								"g": 0.792207792207792,
								"r": 0.792207792207792
							},
							"blendMode": 1,
							"color": {
								"a": 1,
								"b": 0.792207792207792,
								"g": 0.792207792207792,
								"r": 0.792207792207792
							},
							"depthtest": true,
							"depthwrite": true,
							"emit": {
								"b": 0,
								"g": 0,
								"r": 0
							},
							"fog": true,
							"layers": [
								{
									"alpha": 1,
									"mapInput": 0,
									"mapTo": 1,
									"offsetx": 0,
									"offsety": 0,
									"scalex": 1,
									"scaley": 1,
									"src": "/sas/assets/b29f970c"
								}
							],
							"metal": false,
							"reflect": 0.001,
							"shading": true,
							"shininess": 0.0020022,
							"side": 0,
							"specularColor": {
								"b": 0.898,
								"g": 0.898,
								"r": 0.898
							},
							"specularLevel": 1,
							"type": "phong",
							"vertexColors": false,
							"wireframe": false
						},
						"transform": [
							0.009196230210363865,
							0.003927999641746283,
							0,
							0,
							-0.003927999641746283,
							0.009196230210363865,
							0,
							0,
							0,
							0,
							0.009999999776482582,
							0,
							0.004877000115811825,
							0.08373100310564041,
							2.020279884338379,
							1
						],
						"type": "3DR Object"
					},
					"children": {
						"Nf1b3e5c7": {
							"extends": "rotator.vwf",
							"sequence": 0,
							"random": {
								"s0": 0.100750227225944,
								"s1": 0.707774699432775,
								"s2": 0.915872185956687,
								"c": 1
							},
							"properties": {
								"Amount": 80,
								"DisplayName": "rotator1",
								"Local": true,
								"___assetServerOriginalID": "Nf1b3e5c7",
								"owner": "ADLteam",
								"type": "behavior"
							}
						}
					}
				},
				"N5828cc": {
					"extends": "asset.vwf",
					"source": "UH_60_Glass1",
					"type": "link_existing/threejs",
					"sequence": 0,
					"random": {
						"s0": 0.270047802012414,
						"s1": 0.809990369481966,
						"s2": 0.618073079036549,
						"c": 1
					},
					"properties": {
						"___physics_activation_state": 1,
						"___physics_deactivation_time": 0,
						"___physics_velocity_linear": [
							0,
							0,
							0
						],
						"___physics_velocity_angular": [
							0,
							0,
							0
						],
						"DisplayName": "UH_60_Glass1",
						"___assetServerOriginalID": "N5828cc",
						"materialDef": {
							"alpha": 0.24025974025974,
							"ambient": {
								"b": 0.5,
								"g": 0.5,
								"r": 0.5
							},
							"blendMode": 1,
							"color": {
								"a": 0.24025974025974,
								"b": 0.5,
								"g": 0.5,
								"r": 0.5
							},
							"depthtest": true,
							"depthwrite": true,
							"emit": {
								"b": 0,
								"g": 0,
								"r": 0
							},
							"fog": true,
							"layers": [],
							"metal": false,
							"reflect": 0.6,
							"shading": true,
							"shininess": 0.0020022,
							"side": 0,
							"specularColor": {
								"b": 0.898,
								"g": 0.898,
								"r": 0.898
							},
							"specularLevel": 1,
							"type": "phong",
							"vertexColors": false,
							"wireframe": false
						},
						"transform": [
							0.009999999776482582,
							0,
							0,
							0,
							0,
							0.009999999776482582,
							0,
							0,
							0,
							0,
							0.009999999776482582,
							0,
							0,
							0,
							0,
							1
						],
						"type": "3DR Object"
					}
				}
			}
		}
	}
}