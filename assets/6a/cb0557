{
	"extends": "http://vwf.example.com/node3.vwf",
	"sequence": 0,
	"random": {
		"s0": 0.2935250839218497,
		"s1": 0.8833305018488318,
		"s2": 0.4025755792390555,
		"c": 1
	},
	"properties": {
		"glyphURL": "../vwf/view/editorview/images/icons/sphere.png",
		"transform": [
			1,
			0,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			0,
			1,
			0,
			-0.7549859881401062,
			1.325257420539856,
			0.01774579845368862,
			1
		],
		"owner": "ADLteam",
		"DisplayName": "xAPISender",
		"baseURL": "https://sandbox.adlnet.gov/",
		"EditorData": {
			"baseURL": {
				"displayname": "Base URL",
				"property": "baseURL",
				"type": "text"
			}
		},
		"___sourceAssetTimestamp": "Fri Oct 30 2015 13:23:15 GMT-0400 (Eastern Daylight Time)",
		"sourceAssetId": "6acb0557"
	},
	"methods": {
		"senderSnippet": {
			"body": "/*Generic code for sending xAPI statements from demo*/\n\n    var sender = this.Scene.children_by_name.xAPISender;\n    if (sender)\n    {\n        sender.xAPISend(\"verb\", \"object\", \"role\",\n                        null /*optional - see result object*/,\n                        null /*optional - see context.extesions object*/ );\n    }\n\n    /*\n    result object - object to be appended as result\n    {\n     \"score\": { \"scaled\": float, \"raw\": int, \"min\": int, \"max\": int },\n     \"success\": boolean,\n     \"completion\": boolean,\n     \"response\": string,\n     \"duration\": ISO 8601 duration\n     \"extensions\": { \"key must be valid URI\": value (any JSON type)}\n    }\n    */\n    \n    /*\n    conExt - object to be appended to context.extensions\n    {\n     \"key must be valid URI\": value (any JSON type),\n     include:\n       \"https://sandbox.adlnet.gov/context/extensions/scene/time/\": this.Scene.time,\n    }\n    */",
			"parameters": []
		},
		"xAPISend": {
			"body": "//xAPISend in the xAPISender entity\n    //Sends an xAPI sttement for tracking in an lrs\n    //Accepts:\n    //verbage - verb / action - string\n    //obj - xapi object, can be a string or an object\n    //role - role assumed in the simulation - string\n    //res - object to be added as result - object\n    // {\n    //  \"score\": { \"scaled\": float, \"raw\": int, \"min\": int, \"max\": int },\n    //  \"success\": boolean,\n    //  \"completion\": boolean,\n    //  \"response\": string,\n    //  \"duration\": ISO 8601 duration\n    //  \"extensions\": { \"key must be valid URI\": value (any JSON type) }\n    // }\n    //conExt - object to be appended to context.extensions\n    // { \"key must be valid URI\": value (any JSON type),\n    //   include:\n    //     \"https://sandbox.adlnet.gov/context/extensions/scene/time/\": this.Scene.time,\n    // }\n    //Returns:\n    //contructs and sends an xapi statement to an lrs\n\n    // console.log(role + \" xAPI Send\");\n\n    //1 - Registration for the run of this game\n    if (!this.Scene.attempt)\n    {\n        this.Scene.attempt = ADL.ruuid();\n    }\n\n    //2 - Wrapper setup\n    var conf = {\n        // \"endpoint\": \"https://lrs.adlnet.gov/xapi/\",\n        \"endpoint\": \"https://40.129.74.197/xapi/\",\n        \"auth\": \"Basic \" + toBase64('iitsecDemo:1234'),\n    };\n    this.Scene.___xAPI.configure(conf);\n\n    //3 - Who is playing\n    var actor = {\n        account:\n        {\n            name: _UserManager.GetCurrentUserName(),\n            homePage: this.baseURL, //\"https://sandbox.adlnet.gov/\",\n        },\n        name: _UserManager.GetCurrentUserName(),\n    };\n\n    //4 - Verb = did\n    var v = encodeURI(verbage);\n    var verb = {\n        id: this.baseURL + \"verbs/\" + v,\n        display:\n        {\n            \"en-US\": v || \"default\",\n        }\n    };\n\n    //5 - Object - to whom - What happened and where\n    var object;\n    if (verbage === 'started')\n    {\n        //if this is the start of the demo we give a special object\n        obj = window.location.toString() + \"attempt/\" + this.Scene.attempt;\n        object = {\n            id: obj,\n        };\n    }\n    else //otherwise we proceed to put together a typical object\n    {\n        //if they give us an object, send it on\n        if (obj && typeof obj === 'object')\n        {\n            objext = obj;\n        }\n        //otherwise attach the string like so, and . . . \n        else\n        {\n            object = {\n                id: this.baseURL + \"objects/\" + (encodeURI(obj) || \"object\"),\n            };\n        }\n    }\n\n    //6 - Additional context\n    var contextActivities = {\n        \"category\": [\n            {\n                \"id\": this.baseURL + \"event/2015/iitsecdemo\"\n            },\n            {\n                \"id\": this.baseURL + \"role/\" + (encodeURI(role) || \"default\")\n            },\n        ],\n        \"grouping\": [\n            {\n                \"id\": window.location.toString(),\n            },\n            {\n                \"id\": window.location.toString() + \"attempt/\" + this.Scene.attempt\n            },\n        ],\n        \"other\": [\n            {\n                \"id\": _DataManager.getCurrentApplication(),\n                definition:\n                {\n                    type: this.baseURL + \"world\"\n                }\n            }\n        ],\n    };\n\n    //8 - Roll it all into one statement\n    var stmt = new ADL.XAPIStatement(actor, verb, object);\n\n    stmt.addParentActivity(new ADL.XAPIStatement.Activity(window.location.toString(), _DataManager.getInstanceData().title, _DataManager.getInstanceData.description, this.Scene.attempt));\n    stmt.context.contextActivities = contextActivities;\n\n    if (conExt) //6.5 - add context.extesions\n    {\n        stmt.context.extensions = conExt;\n    }\n    else\n    {\n        stmt.context.extensions = {\n            \"https://sandbox.adlnet.gov/context/extensions/scene/time/\": this.Scene.time,\n        };\n    }\n\n    if (res) stmt.result = res; //7 - add a result\n    stmt.timestamp = new Date().toISOString();\n\n    this.Scene.___xAPI.sendStatement(null, stmt);",
			"parameters": [
				"verbage",
				"obj",
				"role",
				"res",
				"conExt"
			]
		},
		"send50Cal": {
			"body": "/*\n    Code for sending xAPI statements from 50 Cal in demo\n    The 50 Cal fires bullets, simulated by raycast,\n    so in the instant it is fired, we know what it has hit.\n    We don't want to send a statement every bullet, we'd like\n    to send a statement every burst. Am using a boolean variable\n    to do this.  Want to also collect info from every bullet and\n    send the collective info in the burst statement.  So let's \n    pin down what the statement should look like, and what we\n    want to collect from the bullets and send with the burst.\n    Seems simple enough.\n    */\n\n    //1 - Burst Statement\n    var sender = this.Scene.children_by_name.xAPISender;\n    if (sender)\n    {\n        var result = {\n            score:\n            {\n                max: 1,\n                min: 0,\n                scaled: 0.22,\n                duration: \"PT13S\", //a real end - start number of the burst\n                response: \"scaled is the hit/fired ratio\"\n            }\n        };\n        var conExt = {\n            \"https://sandbox.adlnet.gov/context/extensions/scene/time/\": this.Scene.time,\n        };\n\n        sender.xAPISend(\"verb\", \"object\", \"role\",\n            result /*optional - see result object*/ ,\n            conExt /*optional - see context.extesions object*/ );\n    }\n\n    //2 - Info from bullets\n\n    var sender = this.Scene.children_by_name.xAPISender;\n    if (sender)\n    {\n        sender.xAPISend(\"verb\", \"object\", \"role\",\n            null /*optional - see result object*/ ,\n            null /*optional - see context.extesions object*/ );\n    }\n\n    /*\n    result object - object to be appended as result\n    {\n     \"score\": { \"scaled\": float, \"raw\": int, \"min\": int, \"max\": int },\n     \"success\": boolean,\n     \"completion\": boolean,\n     \"response\": string,\n     \"duration\": ISO 8601 duration\n     \"extensions\": { \"key must be valid URI\": value (any JSON type)}\n    }\n    */\n\n    /*\n    conExt - object to be appended to context.extensions\n    {\n     \"key must be valid URI\": value (any JSON type),\n     include:\n       \"https://sandbox.adlnet.gov/context/extensions/scene/time/\": this.Scene.time,\n    }\n    */",
			"parameters": []
		}
	}
}