{
	"extends": "SandboxCamera.vwf",
	"source": "vwf/model/threejs/camera.js",
	"type": "subDriver/threejs",
	"sequence": 0,
	"random": {
		"s0": 0.898159096715972,
		"s1": 0.551168398233131,
		"s2": 0.348852874245495,
		"c": 1
	},
	"properties": {
		"": null,
		"DisplayName": "FreeCamera",
		"EditorData": {
			"acceleration": {
				"displayname": "Keypress Acceleration",
				"max": 1,
				"min": 0,
				"property": "acceleration",
				"step": 0.1,
				"type": "slider"
			},
			"velocity": {
				"displayname": "Initial Velocity",
				"max": 5,
				"min": 0,
				"property": "velocity",
				"step": 0.1,
				"type": "slider"
			}
		},
		"___sourceAssetTimestamp": "Tue Nov 03 2015 13:02:02 GMT-0500 (Eastern Standard Time)",
		"acceleration": 0.5,
		"lastX": 0.410759493670886,
		"lastY": 0.90927624872579,
		"owner": "ADLteam",
		"relX": 0,
		"relY": 0,
		"sourceAssetId": "4f23110d",
		"transform": [
			0.7426735162734985,
			-0.6686468720436096,
			0.03672044724225998,
			0,
			0.6685550212860107,
			0.7434794902801514,
			0.016527870669960976,
			0,
			-0.0383523553609848,
			0.012274662032723427,
			0.9991904497146606,
			0,
			-1.9780640602111816,
			-2.072957992553711,
			0.01774579845368862,
			1
		],
		"velocity": 0.1
	},
	"methods": {
		"deinitialize": {
			"body": "\n  this.Scene.unbind('keyUp', this.keyUp);\n      //This function was created for you by the system. \n      //Deinitialize is called when the object is being destroyed.\n      // Clean up here if your object allocated any resources manually during initialize.\n",
			"parameters": []
		},
		"tick": {
			"body": "/* //this.transformAPI.move(0, this.velocity, 0, this.transformAPI.COORDINATES.LOCAL);\n\n    this.transformAPI.rotateZ(this.relX * 30, this.transformAPI.COORDINATES.GLOBAL);\n    this.transformAPI.rotateX(this.relY * 30, this.transformAPI.COORDINATES.LOCAL);\n    //this.transformAPI.rotateY(this.relX * -10, this.transformAPI.COORDINATES.LOCAL);\n    var localX = this.transformAPI.localToGlobalRotation([1, 0, 0]);\n    localX[1] = 0;\n    localX = Vec3.normalize(localX, []);\n    var dotH = Vec3.dot(localX, [0, 0, -1]);\n\n    //if (dotH > 0)\n    this.transformAPI.rotateY(-dotH, this.transformAPI.COORDINATES.LOCAL);\n    //else\n    //  this.transformAPI.rotateY(dotH * -10, this.transformAPI.COORDINATES.LOCAL);\n    var pos = this.transformAPI.getPosition();\n    var hits = _SceneManager.CPUPick(pos, [0, 0, -1]);\n\n    if (hits && pos[2] < hits.point[2])\n    {\n        pos[2] = hits.point[2];\n        this.transformAPI.setPosition(pos);\n        this.transformAPI.rotateX(30, this.transformAPI.COORDINATES.LOCAL);\n    }\n    //this.relX = 0;\n    //this.relY = 0; */",
			"parameters": []
		},
		"ready": {
			"body": "this.Scene.unbind('keyUp', this._keyUp);\n    var self = this;\n\n    this._keyUp = function(e, d)\n    {\n        console.log(\"Key pressed on free camera\", e);\n        /*if (e.key.key == 'W')\n            self.movement = Vec3.add(self.movement.internal_val, [0, -1, 0], []);\n        if (e.key.key == 'S')\n            self.movement = Vec3.add(self.movement.internal_val, [0, 1, 0], []);\n        if (e.key.key == 'A')\n            self.movement = Vec3.add(self.movement.internal_val, [-1, 0, 0], []);\n        if (e.key.key == 'D')\n            self.movement = Vec3.add(self.movement.internal_val, [1, 0, 0], []);*/\n    };\n\n    this.Scene.bind('keyUp', this._keyUp);\n    //This function was created for you by the system. \n    //The scene is now completely loaded. This will fire on each client when the client joins, so it`s not a great place to create objects",
			"parameters": []
		}
	}
}